#ifndef __BD_COMM_CIPHER_H__
#define __BD_COMM_CIPHER_H__

#include "bd_type.h"
#include "bd_common.h"
#include "bd_comm_aio.h"

#ifdef __cplusplus
#if __cplusplus
extern "C"{
#endif
#endif /* __cplusplus */

#define BD_UNF_CIPHER_DES_KEY_SIZE_BYTES		8
#define BD_UNF_CIPHER_TDES_KEY_SIZE_BYTES		24

#define BD_UNF_CIPHER_MD5_KEY_SIZE_BYTES		16
#define BD_UNF_CIPHER_SHA256_KEY_SIZE_BYTES		32
#define BD_UNF_CIPHER_SHA512_KEY_SIZE_BYTES		64

#define BD_UNF_CIPHER_AES_IV_SIZE_BYTES			16
#define BD_UNF_CIPHER_DES_IV_SIZE_BYTES			8
#define BD_UNF_CIPHER_TDES_IV_SIZE_BYTES		8

#define BD_UNF_CIPHER_AES_BLK_SIZE_BYTES		16
#define BD_UNF_CIPHER_DES_BLK_SIZE_BYTES		8
#define BD_UNF_CIPHER_TDES_BLK_SIZE_BYTES		8

#define BD_UNF_CIPHER_MD5_BLK_SIZE_BYTES		4
#define BD_UNF_CIPHER_SHA256_BLK_SIZE_BYTES		4
#define BD_UNF_CIPHER_SHA512_BLK_SIZE_BYTES		4



typedef enum bdBD_UNF_CIPHER_WORK_MODE_E
{
	BD_UNF_CIPHER_WORK_MODE_ECB = 0x0,
	BD_UNF_CIPHER_WORK_MODE_CBC = 0x1,
	BD_UNF_CIPHER_WORK_MODE_CFB = 0x2,
	BD_UNF_CIPHER_WORK_MODE_OFB = 0x3,
	BD_UNF_CIPHER_WORK_MODE_CTR = 0x5,
}BD_UNF_CIPHER_WORK_MODE_E;

typedef enum bdBD_UNF_CIPHER_ENC_ALG_E
{
	BD_UNF_CIPHER_ENC_ALG_DES 		= 0x1,
	BD_UNF_CIPHER_ENC_ALG_TDES 		= 0x2,
	BD_UNF_CIPHER_ENC_ALG_AES 		= 0x4,
}BD_UNF_CIPHER_ENC_ALG_E;

typedef enum bdBD_UNF_CIPHER_AUTH_ALG_E
{
	BD_UNF_CIPHER_AUTH_ALG_MD5 		= 0x1,
	BD_UNF_CIPHER_AUTH_ALG_SHA256 	= 0x4,
	BD_UNF_CIPHER_AUTH_ALG_SHA512 	= 0x5,
}BD_UNF_CIPHER_AUTH_ALG_E;

typedef enum bdBD_UNF_CIPHER_KEY_LENGTH_E
{
	BD_UNF_CIPHER_AES_KEY_128BIT = 0x0,
	BD_UNF_CIPHER_AES_KEY_192BIT = 0x1,
	BD_UNF_CIPHER_AES_KEY_256BIT = 0x2,
}BD_UNF_CIPHER_KEY_LENGTH_E;

typedef struct bdBD_UNF_CIPHER_ENC_CTRL_S
{
	BD_U32 u32EncKey[8];
	BD_U32 u32EncIV[8];
	BD_UNF_CIPHER_ENC_ALG_E enAlg;
	BD_UNF_CIPHER_WORK_MODE_E enWorkMode;
	BD_UNF_CIPHER_KEY_LENGTH_E enKeyLen;
}BD_UNF_CIPHER_ENC_CTRL_S;


typedef struct bdBD_UNF_CIPHER_AUTH_CTRL_S
{
	BD_U32 u32AuthKey[16];
	BD_UNF_CIPHER_AUTH_ALG_E enAlg;
} BD_UNF_CIPHER_AUTH_CTRL_S;


#ifdef __cplusplus
#if __cplusplus
}
#endif
#endif /* __cplusplus */


#endif

