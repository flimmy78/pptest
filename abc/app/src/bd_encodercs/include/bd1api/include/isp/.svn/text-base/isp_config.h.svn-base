#ifndef ISP_PS1210K_H_
#define ISP_PS1210K_H_ 1

#include <bd_sns_ctrl.h>

#if defined(SENSOR_ESTYPE)

/* PS1210K */
static const unsigned short init_p1210k_bayer_config[] = {
	0x0300, 
	0x0031, 
	0x0100, 
	0x0200, 
	0x0300, 
	0x0400, 
	0x0503, 
#if 1	
	0x0608, 
	0x0797, 
#else
	0x060A, 
	0x074F, 
#endif
	0x0804, 
	0x0964, 
	0x0A04, 
	0x0B64, 
	0x0C00, 
	0x0D01, 
	0x0E00, 
	0x0F05, 
	0x1007, 
	0x118C, 
	0x1204, 
	0x133C, 
	0x1400, 
	0x151A, 
	0x1604, 
	0x1751, 
	0x1A00, 
	0x1B02, 
	0x1F00, 
	0x2008, 
	0x2354, 
	0x2400, 
	0x2507, 
	0x2681, 
	0x276B, 
	0x2830, 
	0x2934, 
	0x2A34, 
	0x2B34, 
	0x2C34, 
	0x2D34, 
	0x2E6B, 
	0x2F6D, 
	0x3033, 
	0x310C, 
	0x3234, 
	0x3334, 
	0x3400, 
	0x3500, 
	0x3600, 
	0x3700, 
	0x3800, 
	0x3941, 
	0x3A18, 
	0x3F1B, 
	0x4030, 
	0x410B, 
	0x4202, 
	0x4400, 
	0x4501, 
	0x4600, 
	0x4701, 
	0x4F40, 
	0x5000, 
	0x5105, 
	0x5279, 
	0x5304, 
	0x548D, 
	0x5540, 
	0x5600, 
	0x5700, 
	0x5840, 
	0x5900, 
	0x5ABB, 
	0x5B80, 
	0x5C00, 
	0x5DE1, 
	0x5E00, 
	0x5F04, 
	0x6065, 
	0x6800, 
	0x69A0, 
	0x6A08, 
	0x6BC0, 
	0x6C80, 
	0x6DC0, 
	0x6E18, 
	0x6F20, 
	0x7400, 
	0x7500, 
	0x7600, 
	0x7700, 
	0x7800, 
	0x7900, 
	0x7A00, 
	0x7B25, 
	0x7C04, 
	0x7D77, 
	0x7E08, 
	0x7F00, 
	0x8004, 
	0x810E, 
	0x8200, 
	0x8307, 
	0x8400, 
	0x8500, 
	0x8600, 
	0x8703, 
	0x88FF, 
	0x8A02, 
	0x8B47, 
	0x8CE0, 
	0x8D04, 
	0x8E00, 
	0x8F01, 
	0x9000, 
	0x9100, 
	0x9280, 
	0x9364, 
	0x9464, 
	0x95C8, 
	0x9601, 
	0x9704, 
	0x9877, 
	0x9900, 
	0x9A00, 
	0x9B00, 
	0x9C00, 
	0x9D00, 
	0x9E25, 
	0x9F00, 
	0xA000, 
	0xA100, 
	0xA200, 
	0xA300, 
	0xA410, 
	0xA510, 
	0xA610, 
	0xA710, 
	0xA810, 
	0xAB90, 
	0xAC35, 
	0xAD22, 
	0xAED2, 
	0xAF10, 
	0xB092, 
	0xB151, 
	0xB25A, 
	0xB3F0, 
	0xB4EB, 
	0xB580, 
	0xB680, 
	0xB76A, 
	0xB8CA, 
	0xB9DD, 
	0xBAA9, 
	0xBBA5, 
	0xBC10, 
	0xBD29, 
	0xBEF0, 
	0xBF6D, 
	0xC010, 
	0xC180, 
	0xC280, 
	0xC390, 
	0xC435, 
	0xC522, 
	0xC6D2, 
	0xC710, 
	0xC892, 
	0xC951, 
	0xCA5A, 
	0xCBF0, 
	0xCCEB, 
	0xCD80, 
	0xCE80, 
	0xD002, 
	0xD107, 
	0xD280, 
	0xD3C2, 
	0xD407, 
	0xD580, 
	0xD604, 
	0xD738, 
	0xD800, 
	0xD900, 
	0xDA00, 
	0xDB00, 
	0xDC04, 
	0xDD65, 
	0xDE00, 
	0xDF00, 
	0xE01A, 
	0xE200, 
	0xE300, 
	0xE7FF, 
	0xEA02, 
	0xEB58, 
	0xF0B6, 
	0xF1AB, 
	0xF29D, 
	0xF380, 
	0xF4F1, 
	0xF5EC, 
	0xF6DA, 
	0xF7C7, 
	0xF8FF, 
	0xF900, 
	0xFA80, 
	0xFB10, 
	0xFD02, 
	0xFE80, 
	0x0301, 
	0x0405, 
	0x05E3, 
	0x060C, 
	0x0740, 
	0x0800, 
	0x0901, 
	0x0A00, 
	0x0B01, 
	0x1400, 
	0x1500, 
	0x1600, 
	0x1700, 
	0x1800, 
	0x1900, 
	0x1AFF, 
	0x1B7F, 
	0x1C00, 
	0x1E00, 
	0x1F00, 
	0x2000, 
	0x2100, 
	0x2200, 
	0x2300, 
	0x24FF, 
	0x257F, 
	0x2600, 
	0x2820, 
	0x2920, 
	0x2A20, 
	0x2B20, 
	0x2C00, 
	0x2D00, 
	0x2E00, 
	0x2F00, 
	0x3101, 
	0x3240, 
	0x3300, 
	0x3400, 
	0x3540, 
	0x3709, 
	0x3820, 
	0x3909, 
	0x3A1F, 
	0x3B00, 
	0x3C06, 
	0x3D00, 
	0x4FB7, 
	0x50C0, 
	0x51C1, 
	0x52C2, 
	0x53C3, 
	0x54C4, 
	0x55C5, 
	0x5966, 
	0x5A03, 
	0x5B01, 
	0x5C01, 
	0x5D01, 
	0x5E01, 
	0x5F01, 
	0x7400, 
	0x7500, 
	0x768B, 
	0x7780, 
	0x7800, 
	0x7940, 
	0x7A0B, 
	0x7BA0, 
	0x7C1A, 
	0x7D28, 
	0x7E00, 
	0x7F5D, 
	0x8000, 
	0x8180, 
	0x8200, 
	0x8300, 
	0x8400, 
	0x8500, 
	0x8600, 
	0x8700, 
	0x8802, 
	0x89E8, 
	0x8A05, 
	0x8BD0, 
	0x8C00, 
	0x8D3A, 
	0x8E20, 
	0x8F00, 
	0x9008, 
	0x9298, 
	0x9398, 
	0x9450, 
	0x9590, 
	0x9690, 
	0x9750, 
	0x9800, 
	0x9901, 
	0x9A03, 
	0x9B00, 
	0x9C02, 
	0x9D07, 
	0x9E00, 
	0x9F81, 
	0xA0C0, 
	0xA104, 
	0xA20E, 
	0xA300, 
	0xA500, 
	0xA600, 
	0xA700, 
	0xA800, 
	0xA900, 
	0xAA00, 
	0xAB00, 
	0xAC00, 
	0xAD00, 
	0xAE00, 
	0xAF00, 
	0xB000, 
	0xB100, 
	0xB200, 
	0xB300, 
	0xB400, 
	0xB500, 
	0xB600, 
	0xB700, 
	0xB800, 
	0xB900, 
	0xBA00, 
	0xBB00, 
	0xBC00, 
	0xBD00, 
	0xBE00, 
	0xBF00, 
	0xC000, 
	0xC100, 
	0xC200, 
	0xC300, 
	0xC400, 
	0xC500, 
	0xC600, 
	0xC700, 
	0xC800, 
	0xC900, 
	0xCA00, 
	0xCB00, 
	0xCC00, 
	0xCD00, 
	0xCE00, 
	0xCF00, 
	0xD000, 
	0xD100, 
	0xD200, 
	0xD300, 
	0xD400, 
	0xD500, 
	0xD600, 
	0xD700, 
	0xD800, 
	0xD900, 
	0xDA00, 
	0xDB00, 
	0xDC00, 
	0xDD00, 
	0xDE00, 
	0xDF00, 
	0xE000, 
	0xE100, 
	0xE200, 
	0xE300, 
	0xE400, 
	0xE500, 
	0xE600, 
	0xE700, 
	0xE800, 
	0xE900, 
	0xEB00, 
	0xEC00, 
	0xED00, 
	0xEE00, 
	0xEF00, 
	0xF000, 
	0xF100, 
	0xF200, 
	0x0302, 
	0x04F7, 
	0x05DC, 
	0x0600, 
	0x07E2, 
	0x0800, 
	0x0900, 
	0x0A15, 
	0x0B90, 
	0x0C00, 
	0x0D51, 
	0x0E51, 
	0x0F51, 
	0x1051, 
	0x1151, 
	0x1251, 
	0x1351, 
	0x1451, 
	0x1551, 
	0x1651, 
	0x1751, 
	0x1851, 
	0x1951, 
	0x1A51, 
	0x1B51, 
	0x1C51, 
	0x1D00, 
	0x1E02, 
	0x1F02, 
	0x2000, 
	0x2100, 
	0x2200, 
	0x2300, 
	0x2400, 
	0x2500, 
	0x2600, 
	0x2700, 
	0x2800, 
	0x2900, 
	0x2B14, 
	0x2C00, 
	0x2D40, 
	0x2E30, 
	0x3080, 
	0x3180, 
	0x3337, 
	0x3490, 
	0x3587, 
	0x368E, 
	0x373B, 
	0x388C, 
	0x3982, 
	0x3A98, 
	0x3B3B, 
	0x3D00, 
	0x3E03, 
	0x3F0C, 
	0x4019, 
	0x4126, 
	0x423F, 
	0x4352, 
	0x446E, 
	0x4582, 
	0x46A1, 
	0x47B9, 
	0x48CE, 
	0x49E0, 
	0x4AF0, 
	0x4BFF, 
	0x4C00, 
	0x4D0B, 
	0x4E17, 
	0x4F22, 
	0x502E, 
	0x5140, 
	0x5250, 
	0x536E, 
	0x5488, 
	0x55AE, 
	0x56CA, 
	0x57DC, 
	0x58EC, 
	0x59F6, 
	0x5AFF, 
	0x5B00, 
	0x5C03, 
	0x5D0C, 
	0x5E19, 
	0x5F26, 
	0x603F, 
	0x6152, 
	0x626E, 
	0x6382, 
	0x64A1, 
	0x65B9, 
	0x66CE, 
	0x67E0, 
	0x68F0, 
	0x69FF, 
	0x6A00, 
	0x6B0C, 
	0x6C19, 
	0x6D27, 
	0x6E34, 
	0x6F4B, 
	0x705C, 
	0x7174, 
	0x7286, 
	0x73A4, 
	0x74BA, 
	0x75CE, 
	0x76E0, 
	0x77F1, 
	0x78FF, 
	0x7A8C, 
	0x7B20, 
	0x7C20, 
	0x7D00, 
	0x7E0A, 
	0x7F80, 
	0x8025, 
	0x8100, 
	0x8200, 
	0x8325, 
	0x8680, 
	0x8780, 
	0x887F, 
	0x8A00, 
	0x8B00, 
	0x8D00, 
	0x8EFE, 
	0x8F00, 
	0x9140, 
	0x9240, 
	0x9340, 
	0x9440, 
	0x9500, 
	0x9600, 
	0x9700, 
	0x9800, 
	0x9A80, 
	0x9B20, 
	0x9C80, 
	0x9D00, 
	0xA000, 
	0xA101, 
	0xA202, 
	0xA380, 
	0xA400, 
	0xA501, 
	0xA600, 
	0xA7F0, 
	0xA800, 
	0xA980, 
	0xAA80, 
	0xAC00, 
	0xAD00, 
	0xAE00, 
	0xAF0C, 
	0xB004, 
	0xB14B, 
	0xB300, 
	0xB400, 
	0xB507, 
	0xB67F, 
	0xB700, 
	0xB800, 
	0xB904, 
	0xBA37, 
	0xBB02, 
	0xBC80, 
	0xBD04, 
	0xBEFF, 
	0xBF01, 
	0xC068, 
	0xC102, 
	0xC2CF, 
	0xC303, 
	0xC4C0, 
	0xC502, 
	0xC61C, 
	0xC700, 
	0xC800, 
	0xC907, 
	0xCA7F, 
	0xCB00, 
	0xCC00, 
	0xCD04, 
	0xCE37, 
	0xD000, 
	0xD100, 
	0xD200, 
	0xD300, 
	0xD400, 
	0xD503, 
	0xD6C0, 
	0xD801, 
	0xD941, 
	0xDA02, 
	0xDB80, 
	0xDC00, 
	0xDDA1, 
	0xDE01, 
	0xDF40, 
	0xE008, 
	0xE100, 
	0xE340, 
	0xE440, 
	0xE540, 
	0xE640, 
	0xE740, 
	0xE840, 
	0xE940, 
	0xEA40, 
	0xEB08, 
	0xEC00, 
	0xED80, 
	0xEE80, 
	0xEF04, 
	0xF004, 
	0xF104, 
	0xF200, 
	0xF33C, 
	0xF402, 
	0xF53A, 
	0xF600, 
	0xF700, 
	0xF800, 
	0xF900, 
	0xFA00, 
	0xFB00, 
	0xFC00, 
	0xFD00, 
	0x0303, 
	0x0437, 
	0x0500, 
	0x0600, 
	0x0732, 
	0x0825, 
	0x0900, 
	0x0A00, 
	0x0B25, 
	0x0C25, 
	0x0D00, 
	0x0E00, 
	0x0F25, 
	0x1003, 
	0x1100, 
	0x1203, 
	0x1300, 
	0x1404, 
	0x1500, 
	0x163A, 
	0x1750, 
	0x185A, 
	0x1920, 
	0x1B00, 
	0x1C5D, 
	0x1D00, 
	0x1E40, 
	0x1F00, 
	0x205E, 
	0x2200, 
	0x2300, 
	0x2400, 
	0x2500, 
	0x2600, 
	0x2710, 
	0x2820, 
	0x2900, 
	0x2A00, 
	0x2B0C, 
	0x2C1C, 
	0x2D00, 
	0x2E5F, 
	0x2F3F, 
	0x303F, 
	0x317F, 
	0x3240, 
	0x3340, 
	0x3440, 
	0x3501, 
	0x3600, 
	0x3708, 
	0x3818, 
	0x3900, 
	0x3A10, 
	0x3B10, 
	0x3C10, 
	0x3D10, 
	0x3E04, 
	0x3F08, 
	0x4018, 
	0x4104, 
	0x43FF, 
	0x44FF, 
	0x45FF, 
	0x46FF, 
	0x4750, 
	0x4850, 
	0x4950, 
	0x4A50, 
	0x4E00, 
	0x4F10, 
	0x5020, 
	0x5100, 
	0x5200, 
	0x5310, 
	0x5420, 
	0x5500, 
	0x5600, 
	0x5704, 
	0x5808, 
	0x5900, 
	0x5B80, 
	0x5D00, 
	0x5E00, 
	0x5F00, 
	0x6051, 
	0x6151, 
	0x6504, 
	0x6604, 
	0x6704, 
	0x6804, 
	0x6904, 
	0x6A04, 
	0x6B04, 
	0x6C04, 
	0x6D7F, 
	0x6E7F, 
	0x6F7F, 
	0x707F, 
	0x717F, 
	0x727F, 
	0x737F, 
	0x747F, 
	0x7700, 
	0x7804, 
	0x7908, 
	0x7A00, 
	0x7B10, 
	0x7C16, 
	0x7D20, 
	0x7E10, 
	0x7FFF, 
	0x8200, 
	0x9780, 
	0x9880, 
	0x9980, 
	0x9A80, 
	0x9B40, 
	0x9C40, 
	0x9D40, 
	0x9E40, 
	0xA000, 
	0xA17F, 
	0xA27F, 
	0xA37F, 
	0xA47F, 
	0xA500, 
	0xA600, 
	0xA700, 
	0xA800, 
	0xAC00, 
	0xAD00, 
	0xB540, 
	0xB640, 
	0xB740, 
	0xB840, 
	0xB940, 
	0xBA40, 
	0xBB40, 
	0xBD00, 
	0xBE00, 
	0xBF00, 
	0xC000, 
	0xCE00, 
	0xCF08, 
	0xD008, 
	0xD108, 
	0xD20F, 
	0xD310, 
	0xD428, 
	0xD597, 
	0xD60A, 
	0xD7A0, 
	0xDC00, 
	0xDD04, 
	0xDE0C, 
	0xDF19, 
	0xE023, 
	0xE132, 
	0xE241, 
	0xE355, 
	0xE469, 
	0xE587, 
	0xE69B, 
	0xE7B1, 
	0xE8C9, 
	0xE9E3, 
	0xEAFF, 
	0xEC00, 
	0xED00, 
	0xEE00, 
	0xEF00, 
	0xF120, 
	0xF220, 
	0xF320, 
	0xF420, 
	0xF518, 
	0xF618, 
	0xF718, 
	0xF818, 
	0xF900, 
	0xFA00, 
	0xFB00, 
	0xFC00, 
	0xFD40, 
	0x0304, 
	0x0498, 
	0x0565, 
	0x06A0, 
	0x0700, 
	0x0E80, 
	0x0FA0, 
	0x10FF, 
	0x11EE, 
	0x1202, 
	0x1307, 
	0x1402, 
	0x1507, 
	0x1602, 
	0x1707, 
	0x1800, 
	0x1900, 
	0x1A28, 
	0x1B02, 
	0x1C47, 
	0x1DE0, 
	0x1E04, 
	0x1F8F, 
	0x20C0, 
	0x2140, 
	0x2200, 
	0x2380, 
	0x2400, 
	0x2501, 
	0x2600, 
	0x2700, 
	0x2801, 
	0x2940, 
	0x2A00, 
	0x2C66, 
	0x2E05, 
	0x2F00, 
	0x3008, 
	0x3108, 
	0x3208, 
	0x3308, 
	0x3408, 
	0x3510, 
	0x3640, 
	0x3780, 
	0x38FF, 
	0x3900, 
	0x3A80, 
	0x4108, 
	0x4210, 
	0x431A, 
	0x4425, 
	0x4504, 
	0x4670, 
	0x4780, 
	0x4804, 
	0x4904, 
	0x4A05, 
	0x4B00, 
	0x4CFF, 
	0x4DFF, 
	0x4F03, 
	0x5000, 
	0x5110, 
	0x52F0, 
	0x5302, 
	0x5402, 
	0x5540, 
	0x5600, 
	0x57C0, 
	0x5804, 
	0x596E, 
	0x5A45, 
	0x5B27, 
	0x5C4F, 
	0x5D64, 
	0x5EC4, 
	0x5F3C, 
	0x601E, 
	0x614F, 
	0x6278, 
	0x6343, 
	0x64A3, 
	0x6528, 
	0x663C, 
	0x6880, 
	0x6980, 
	0x6A80, 
	0x6B80, 
	0x6C80, 
	0x6D80, 
	0x6E30, 
	0x6F50, 
	0x705E, 
	0x7180, 
	0x7280, 
	0x7306, 
	0x7404, 
	0x7500, 
	0x7600, 
	0x77FF, 
	0x78FF, 
	0x7900, 
	0x7A00, 
	0x7BFF, 
	0x7CFF, 
	0x7D00, 
	0x7E80, 
	0x7F01, 
	0x8000, 
	0x82F0, 
	0x8300, 
	0x8400, 
	0x8500, 
	0x8600, 
	0x8700, 
	0x8800, 
	0x8900, 
	0x8A00, 
	0x8B00, 
	0x8C00, 
	0x8D00, 
	0x8E06, 
	0x8F00, 
	0x9010, 
	0x9100, 
	0x9220, 
	0x9300, 
	0x9402, 
	0x9500, 
	0x9608, 
	0x9700, 
	0x9820, 
	0x9950, 
	0x9A28, 
	0x9B00, 
	0x9C01, 
	0x9F90, 
	0xA080, 
	0xA103, 
	0xA203, 
	0xA300, 
	0xA400, 
	0xA50C, 
	0xA62A, 
	0xA700, 
	0xA830, 
	0xA9A8, 
	0xAB00, 
	0xAC00, 
	0xAD06, 
	0xAE0A, 
	0xAF0D, 
	0xB010, 
	0xB25D, 
	0xB300, 
	0xB45E, 
	0xB500, 
	0xB62C, 
	0xB740, 
	0xB82B, 
	0xBA90, 
	0xBB80, 
	0xBC00, 
	0xC000, 
	0xC100, 
	0xC200, 
	0xC300, 
	0xC400, 
	0x0302, 
	0x8A01, 
	0x0302, 
	0x5B00, 
	0x5C0C, 
	0x5D20, 
	0x5E2F, 
	0x5F3A, 
	0x604B, 
	0x6158, 
	0x626D, 
	0x637F, 
	0x649C, 
	0x65B4, 
	0x66CA, 
	0x67DD, 
	0x68EF, 
	0x69FF, 
	0x0301, 
	0x9278, 
	0x9378, 
	0x9450, 
	0x9578, 
	0x9678, 
	0x9750, 
	0x0304, 
	0x8D00, 
	0x8E0A, 
	0x8F00, 
	0x9010, 
	0x9100, 
	0x9218, 
	0x0304, 
	0x0564, 
	0x0304, 
	0x1204, 
	0x135F, 
	0x1404, 
	0x155F, 
	0x1604, 
	0x175F, 
	0x1800, 
	0x1900, 
	0x1A20, 
	0x1B00, 
	0x1C68, 
	0x1DE8, 
	0x1E00, 
	0x1F68, 
	0x20E8, 
	0x0304, 
	0x0E81, 
	0x0FB0, 
	0x10B0, 
	0x0302, 
	0x3337, 
	0x3490, 
	0x3587, 
	0x368E, 
	0x373B, 
	0x388C, 
	0x3987, 
	0x3A98, 
	0x3B3F, 
	0x0303, 
	0x0425, 
	0x0500, 
	0x0600, 
	0x0725, 
	0x0825, 
	0x0900, 
	0x0A00, 
	0x0B25, 
	0x0C25, 
	0x0D00, 
	0x0E00, 
	0x0F25, 
	0x1920, 
	0x0304, 
	0x6880, 
	0x6980, 
	0x6A80, 
	0x6B7D, 
	0x6C80, 
	0x6D7D, 
	0x0302, 
	0x0A95, 
	0x0302, 
	0x04F7, 
	0x05DE, 
	0x0902, 
	0x0B12, 
	0x0302, 
	0x30E0, 
	0x31E0, 
	0x0303, 
	0xFDFF, 
	0x0302, 
	0x0B90, 
	0x0302, 
	0x2B1F, 
	0x0302, 
	0x95F0, 
	0x96F0, 
	0x97F7, 
	0x0303, 
	0x2600, 
	0x276E, 
	0x287A, 
	0x2A00, 
	0x2B0C, 
	0x2C1C, 
	0x6D22, 
	0x6E22, 
	0x6F22, 
	0x7022, 
	0x7129, 
	0x7229, 
	0x7329, 
	0x7429, 
	0x9B3A, 
	0x9C3A, 
	0x9D3A, 
	0x9E3A, 
	0xA118, 
	0xA218, 
	0xA318, 
	0xA418, 
	0x0304, 
	0xC060, 
	0xC160, 
	0xC280, 
	0xF128, 
	0xF228, 
	0xF328, 
	0xF428, 
	0xF518, 
	0xF618, 
	0xF718, 
	0xF818, 
	0xF918, 
	0xFA18, 
	0xFB18, 
	0xFC18, 
	0x0303, 
	0xB560, 
	0xB62D, 
	0xB719, 
	0xB80C, 
	0xB90D, 
	0xBA0A, 
	0xBB09, 
	0x0300, 
#if 1	
	0x0608, 
	0x0797, 
#else
	0x060A, 
	0x074F, 
#endif
	0x0804, 
	0x0964, 
	0x0a04, 
	0x0b64, 
	0x0300, 
	0x23F0, 
	0x2D01, 
	0x2999, 
	0x4030, 
	0x2500, 
	0x2681, 
	0x0302, 
	0x05DF, 
	0x0300, 
	0x0c00, 
	0x0d05, 
	0x0e00, 
	0x0f05, 
	0x1007, 
	0x1184, 
	0x1204, 
	0x133C, 
	0x1400, 
	0x151A, 
	0x1604, 
	0x1751, 
	0xD407, 
	0xD580, 
	0xD604, 
	0xD738, 
	0x0301, 
	0x0800, 
	0x0901, 
	0x0A00, 
	0x0B01, 
	0x0303, 
	0x1B00, 
	0x1C5D, 
	0x1D00, 
	0x1E40, 
	0x1F00, 
	0x205E, 
	0x0304, 
	0xB25D, 
	0xB300, 
	0xB45E, 
	0xB500, 
	0xB62C, 
	0xB740, 
	0xB82B, 
	0x2700, 
	0x2801, 
	0x2940, 
	0x2A00, 
	0x0301, 
	0x3101, 
	0x3240, 
	0x3300, 
	0x0300, 
	0x0400, 
	0x0300, 
	0xE300, 
	0x0300, 
	0xD3C2, 
	0x0300, 
	0x2350, 
	0x402C, 
	0x0301, 
	0x59EE, 
	0x0302, 
	0x0800, 
	0x0302, 
	0xB300, 
	0xB400, 
	0xB507, 
	0xB67F, 
	0xB700, 
	0xB800, 
	0xB904, 
	0xBA37, 
	0xBB02, 
	0xBC80, 
	0xBD04, 
	0xBEFF, 
	0xBF01, 
	0xC068, 
	0xC102, 
	0xC2CF, 
	0xC303, 
	0xC4C0, 
	0xC502, 
	0xC61C, 
	0xC700, 
	0xC800, 
	0xC907, 
	0xCA7F, 
	0xCB00, 
	0xCC00, 
	0xCD04, 
	0xCE37, 
	0x0305, 
	0xE4EE, 
	0xE301, 
	0x6504, 
	0x0301, 
	0xA501, 
	0xA631, 
	0xA701, 
	0xA8C0, 
	0xA901, 
	0xAA32, 
	0xAB01, 
	0xACC1, 
	0xAD01, 
	0xAE33, 
	0xAF01, 
	0xB0C2, 
	0xB101, 
	0xB234, 
	0xB301, 
	0xB4C3, 
	0xB501, 
	0xB635, 
	0xB701, 
	0xB8C4, 
	0xB901, 
	0xBA26, 
	0xBB01, 
	0xBCB6, 
	0xBD01, 
	0xBE2B, 
	0xBF01, 
	0xC0B7, 
	0xE504, 
	0xE635, 
	0xE970, 
	0xEB04, 
	0xEC11, 
	0xED01, 
	0xEEDB, 
	0xEF01, 
	0xF001, 
	0xF1DD, 
	0xF201, 
	0x0302, 
	0x04F7, 
	0x05DC, 
	0xFFFF, 
};

static const unsigned short init_p1210k_lvds_config[] = {		// es
	0xFFFF,
};

static const unsigned short init_p1210k_bayer_3dnr_on_config[] = {
	0xFFFF,
};

static const unsigned short init_p1210k_bayer_3dnr_off_config[] = {
	0xFFFF,
};

static const unsigned short init_p1210k_lvds_3dnr_on_config[] = {
	0xFFFF,
};

static const unsigned short init_p1210k_lvds_3dnr_off_config[] = {
	0xFFFF,
};

static const struct isp_3dnr_attr init_p1210k_bayer_3dnr_attr = {
	.on = init_p1210k_bayer_3dnr_on_config,
	.off = init_p1210k_bayer_3dnr_off_config,
};

static const struct isp_3dnr_attr init_p1210k_lvds_3dnr_attr = {
	.on = init_p1210k_lvds_3dnr_on_config,
	.off = init_p1210k_lvds_3dnr_off_config,
};


/* PS1210M */
static const unsigned short init_p1210m_bayer_config[] = {		// es
	0x0300 ,
	0x0031 ,
	0x0100 ,
	0x0200 ,
	0x0300 ,
	0x0400 ,
	0x0503 ,
	0x0608 ,
	0x0797 ,
	0x0804 ,
	0x0964 ,
	0x0A04 ,
	0x0B64 ,
	0x0C00 ,
	0x0D01 ,
	0x0E00 ,
	0x0F05 ,
	0x1007 ,
	0x118C ,
	0x1204 ,
	0x133C ,
	0x1400 ,
	0x151A ,
	0x1604 ,
	0x1751 ,
	0x1A00 ,
	0x1B02 ,
	0x1F00 ,
	0x2008 ,
	0x2354 ,
	0x2400 ,
	0x2507 ,
	0x2681 ,
	0x276B ,
	0x2830 ,
	0x2934 ,
	0x2A34 ,
	0x2B34 ,
	0x2C34 ,
	0x2D34 ,
	0x2E6B ,
	0x2F6D ,
	0x3033 ,
	0x310C ,
	0x3234 ,
	0x3334 ,
	0x3400 ,
	0x3500 ,
	0x3600 ,
	0x3700 ,
	0x3800 ,
	0x3941 ,
	0x3A18 ,
	0x3F1B ,
	0x4030 ,
	0x410B ,
	0x4202 ,
	0x4400 ,
	0x4501 ,
	0x4600 ,
	0x4701 ,
	0x4F40 ,
	0x5000 ,
	0x5105 ,
	0x5279 ,
	0x5304 ,
	0x548D ,
	0x5540 ,
	0x5600 ,
	0x5700 ,
	0x5840 ,
	0x5900 ,
	0x5ABB ,
	0x5B80 ,
	0x5C00 ,
	0x5DE1 ,
	0x5E00 ,
	0x5F04 ,
	0x6065 ,
	0x6800 ,
	0x69A0 ,
	0x6A08 ,
	0x6BC0 ,
	0x6C80 ,
	0x6DC0 ,
	0x6E18 ,
	0x6F20 ,
	0x7400 ,
	0x7500 ,
	0x7600 ,
	0x7700 ,
	0x7800 ,
	0x7900 ,
	0x7A00 ,
	0x7B25 ,
	0x7C04 ,
	0x7D77 ,
	0x7E08 ,
	0x7F00 ,
	0x8004 ,
	0x810E ,
	0x8200 ,
	0x8307 ,
	0x8400 ,
	0x8500 ,
	0x8600 ,
	0x8703 ,
	0x88FF ,
	0x8A02 ,
	0x8B47 ,
	0x8CE0 ,
	0x8D04 ,
	0x8E00 ,
	0x8F01 ,
	0x9000 ,
	0x9100 ,
	0x9280 ,
	0x9364 ,
	0x9464 ,
	0x95C8 ,
	0x9601 ,
	0x9704 ,
	0x9877 ,
	0x9900 ,
	0x9A00 ,
	0x9B00 ,
	0x9C00 ,
	0x9D00 ,
	0x9E25 ,
	0x9F00 ,
	0xA000 ,
	0xA100 ,
	0xA200 ,
	0xA300 ,
	0xA410 ,
	0xA510 ,
	0xA610 ,
	0xA710 ,
	0xA810 ,
	0xAB90 ,
	0xAC35 ,
	0xAD22 ,
	0xAED2 ,
	0xAF10 ,
	0xB092 ,
	0xB151 ,
	0xB25A ,
	0xB3F0 ,
	0xB4EB ,
	0xB580 ,
	0xB680 ,
	0xB76A ,
	0xB8CA ,
	0xB9DD ,
	0xBAA9 ,
	0xBBA5 ,
	0xBC10 ,
	0xBD29 ,
	0xBEF0 ,
	0xBF6D ,
	0xC010 ,
	0xC180 ,
	0xC280 ,
	0xC390 ,
	0xC435 ,
	0xC522 ,
	0xC6D2 ,
	0xC710 ,
	0xC892 ,
	0xC951 ,
	0xCA5A ,
	0xCBF0 ,
	0xCCEB ,
	0xCD80 ,
	0xCE80 ,
	0xD002 ,
	0xD107 ,
	0xD280 ,
	0xD3C2 ,
	0xD407 ,
	0xD580 ,
	0xD604 ,
	0xD738 ,
	0xD800 ,
	0xD900 ,
	0xDA00 ,
	0xDB00 ,
	0xDC04 ,
	0xDD65 ,
	0xDE00 ,
	0xDF00 ,
	0xE01A ,
	0xE200 ,
	0xE300 ,
	0xE7FF ,
	0xEA02 ,
	0xEB58 ,
	0xF0B6 ,
	0xF1AB ,
	0xF29D ,
	0xF380 ,
	0xF4F1 ,
	0xF5EC ,
	0xF6DA ,
	0xF7C7 ,
	0xF8FF ,
	0xF900 ,
	0xFA80 ,
	0xFB10 ,
	0xFD02 ,
	0xFE80 ,
	0x0301 ,
	0x0405 ,
	0x05E3 ,
	0x060C ,
	0x0740 ,
	0x0800 ,
	0x0901 ,
	0x0A00 ,
	0x0B01 ,
	0x1400 ,
	0x1500 ,
	0x1600 ,
	0x1700 ,
	0x1800 ,
	0x1900 ,
	0x1AFF ,
	0x1B7F ,
	0x1C00 ,
	0x1E00 ,
	0x1F00 ,
	0x2000 ,
	0x2100 ,
	0x2200 ,
	0x2300 ,
	0x24FF ,
	0x257F ,
	0x2600 ,
	0x2820 ,
	0x2920 ,
	0x2A20 ,
	0x2B20 ,
	0x2C00 ,
	0x2D00 ,
	0x2E00 ,
	0x2F00 ,
	0x3101 ,
	0x3240 ,
	0x3300 ,
	0x3400 ,
	0x3540 ,
	0x3709 ,
	0x3820 ,
	0x3909 ,
	0x3A1F ,
	0x3B00 ,
	0x3C06 ,
	0x3D00 ,
	0x4FB7 ,
	0x50C0 ,
	0x51C1 ,
	0x52C2 ,
	0x53C3 ,
	0x54C4 ,
	0x55C5 ,
	0x5966 ,
	0x5A03 ,
	0x5B01 ,
	0x5C01 ,
	0x5D01 ,
	0x5E01 ,
	0x5F01 ,
	0x7400 ,
	0x7500 ,
	0x768B ,
	0x7780 ,
	0x7800 ,
	0x7940 ,
	0x7A0B ,
	0x7BA0 ,
	0x7C1A ,
	0x7D28 ,
	0x7E00 ,
	0x7F5D ,
	0x8000 ,
	0x8180 ,
	0x8200 ,
	0x8300 ,
	0x8400 ,
	0x8500 ,
	0x8600 ,
	0x8700 ,
	0x8802 ,
	0x89E8 ,
	0x8A05 ,
	0x8BD0 ,
	0x8C00 ,
	0x8D3A ,
	0x8E20 ,
	0x8F00 ,
	0x9008 ,
	0x9298 ,
	0x9398 ,
	0x9450 ,
	0x9590 ,
	0x9690 ,
	0x9750 ,
	0x9800 ,
	0x9901 ,
	0x9A03 ,
	0x9B00 ,
	0x9C02 ,
	0x9D07 ,
	0x9E00 ,
	0x9F81 ,
	0xA0C0 ,
	0xA104 ,
	0xA20E ,
	0xA300 ,
	0xA500 ,
	0xA600 ,
	0xA700 ,
	0xA800 ,
	0xA900 ,
	0xAA00 ,
	0xAB00 ,
	0xAC00 ,
	0xAD00 ,
	0xAE00 ,
	0xAF00 ,
	0xB000 ,
	0xB100 ,
	0xB200 ,
	0xB300 ,
	0xB400 ,
	0xB500 ,
	0xB600 ,
	0xB700 ,
	0xB800 ,
	0xB900 ,
	0xBA00 ,
	0xBB00 ,
	0xBC00 ,
	0xBD00 ,
	0xBE00 ,
	0xBF00 ,
	0xC000 ,
	0xC100 ,
	0xC200 ,
	0xC300 ,
	0xC400 ,
	0xC500 ,
	0xC600 ,
	0xC700 ,
	0xC800 ,
	0xC900 ,
	0xCA00 ,
	0xCB00 ,
	0xCC00 ,
	0xCD00 ,
	0xCE00 ,
	0xCF00 ,
	0xD000 ,
	0xD100 ,
	0xD200 ,
	0xD300 ,
	0xD400 ,
	0xD500 ,
	0xD600 ,
	0xD700 ,
	0xD800 ,
	0xD900 ,
	0xDA00 ,
	0xDB00 ,
	0xDC00 ,
	0xDD00 ,
	0xDE00 ,
	0xDF00 ,
	0xE000 ,
	0xE100 ,
	0xE200 ,
	0xE300 ,
	0xE400 ,
	0xE500 ,
	0xE600 ,
	0xE700 ,
	0xE800 ,
	0xE900 ,
	0xEB00 ,
	0xEC00 ,
	0xED00 ,
	0xEE00 ,
	0xEF00 ,
	0xF000 ,
	0xF100 ,
	0xF200 ,
	0x0302 ,
	0x04F7 ,
	0x05DC ,
	0x0600 ,
	0x07E2 ,
	0x0800 ,
	0x0900 ,
	0x0A15 ,
	0x0B90 ,
	0x0C00 ,
	0x0D51 ,
	0x0E51 ,
	0x0F51 ,
	0x1051 ,
	0x1151 ,
	0x1251 ,
	0x1351 ,
	0x1451 ,
	0x1551 ,
	0x1651 ,
	0x1751 ,
	0x1851 ,
	0x1951 ,
	0x1A51 ,
	0x1B51 ,
	0x1C51 ,
	0x1D00 ,
	0x1E02 ,
	0x1F02 ,
	0x2000 ,
	0x2100 ,
	0x2200 ,
	0x2300 ,
	0x2400 ,
	0x2500 ,
	0x2600 ,
	0x2700 ,
	0x2800 ,
	0x2900 ,
	0x2B14 ,
	0x2C00 ,
	0x2D40 ,
	0x2E30 ,
	0x3080 ,
	0x3180 ,
	0x3337 ,
	0x3490 ,
	0x3587 ,
	0x368E ,
	0x373B ,
	0x388C ,
	0x3982 ,
	0x3A98 ,
	0x3B3B ,
	0x3D00 ,
	0x3E03 ,
	0x3F0C ,
	0x4019 ,
	0x4126 ,
	0x423F ,
	0x4352 ,
	0x446E ,
	0x4582 ,
	0x46A1 ,
	0x47B9 ,
	0x48CE ,
	0x49E0 ,
	0x4AF0 ,
	0x4BFF ,
	0x4C00 ,
	0x4D0B ,
	0x4E17 ,
	0x4F22 ,
	0x502E ,
	0x5140 ,
	0x5250 ,
	0x536E ,
	0x5488 ,
	0x55AE ,
	0x56CA ,
	0x57DC ,
	0x58EC ,
	0x59F6 ,
	0x5AFF ,
	0x5B00 ,
	0x5C03 ,
	0x5D0C ,
	0x5E19 ,
	0x5F26 ,
	0x603F ,
	0x6152 ,
	0x626E ,
	0x6382 ,
	0x64A1 ,
	0x65B9 ,
	0x66CE ,
	0x67E0 ,
	0x68F0 ,
	0x69FF ,
	0x6A00 ,
	0x6B0C ,
	0x6C19 ,
	0x6D27 ,
	0x6E34 ,
	0x6F4B ,
	0x705C ,
	0x7174 ,
	0x7286 ,
	0x73A4 ,
	0x74BA ,
	0x75CE ,
	0x76E0 ,
	0x77F1 ,
	0x78FF ,
	0x7A8C ,
	0x7B20 ,
	0x7C20 ,
	0x7D00 ,
	0x7E0A ,
	0x7F80 ,
	0x8025 ,
	0x8100 ,
	0x8200 ,
	0x8325 ,
	0x8680 ,
	0x8780 ,
	0x887F ,
	0x8A00 ,
	0x8B00 ,
	0x8D00 ,
	0x8EFE ,
	0x8F00 ,
	0x9140 ,
	0x9240 ,
	0x9340 ,
	0x9440 ,
	0x9500 ,
	0x9600 ,
	0x9700 ,
	0x9800 ,
	0x9A80 ,
	0x9B20 ,
	0x9C80 ,
	0x9D00 ,
	0xA000 ,
	0xA101 ,
	0xA202 ,
	0xA380 ,
	0xA400 ,
	0xA501 ,
	0xA600 ,
	0xA7F0 ,
	0xA800 ,
	0xA980 ,
	0xAA80 ,
	0xAC00 ,
	0xAD00 ,
	0xAE00 ,
	0xAF0C ,
	0xB004 ,
	0xB14B ,
	0xB300 ,
	0xB400 ,
	0xB507 ,
	0xB67F ,
	0xB700 ,
	0xB800 ,
	0xB904 ,
	0xBA37 ,
	0xBB02 ,
	0xBC80 ,
	0xBD04 ,
	0xBEFF ,
	0xBF01 ,
	0xC068 ,
	0xC102 ,
	0xC2CF ,
	0xC303 ,
	0xC4C0 ,
	0xC502 ,
	0xC61C ,
	0xC700 ,
	0xC800 ,
	0xC907 ,
	0xCA7F ,
	0xCB00 ,
	0xCC00 ,
	0xCD04 ,
	0xCE37 ,
	0xD000 ,
	0xD100 ,
	0xD200 ,
	0xD300 ,
	0xD400 ,
	0xD503 ,
	0xD6C0 ,
	0xD801 ,
	0xD941 ,
	0xDA02 ,
	0xDB80 ,
	0xDC00 ,
	0xDDA1 ,
	0xDE01 ,
	0xDF40 ,
	0xE008 ,
	0xE100 ,
	0xE340 ,
	0xE440 ,
	0xE540 ,
	0xE640 ,
	0xE740 ,
	0xE840 ,
	0xE940 ,
	0xEA40 ,
	0xEB08 ,
	0xEC00 ,
	0xED80 ,
	0xEE80 ,
	0xEF04 ,
	0xF004 ,
	0xF104 ,
	0xF200 ,
	0xF33C ,
	0xF402 ,
	0xF53A ,
	0xF600 ,
	0xF700 ,
	0xF800 ,
	0xF900 ,
	0xFA00 ,
	0xFB00 ,
	0xFC00 ,
	0xFD00 ,
	0x0303 ,
	0x0437 ,
	0x0500 ,
	0x0600 ,
	0x0732 ,
	0x0825 ,
	0x0900 ,
	0x0A00 ,
	0x0B25 ,
	0x0C25 ,
	0x0D00 ,
	0x0E00 ,
	0x0F25 ,
	0x1003 ,
	0x1100 ,
	0x1203 ,
	0x1300 ,
	0x1404 ,
	0x1500 ,
	0x163A ,
	0x1750 ,
	0x185A ,
	0x1920 ,
	0x1B00 ,
	0x1C5D ,
	0x1D00 ,
	0x1E40 ,
	0x1F00 ,
	0x205E ,
	0x2200 ,
	0x2300 ,
	0x2400 ,
	0x2500 ,
	0x2600 ,
	0x2710 ,
	0x2820 ,
	0x2900 ,
	0x2A00 ,
	0x2B0C ,
	0x2C1C ,
	0x2D00 ,
	0x2E5F ,
	0x2F3F ,
	0x303F ,
	0x317F ,
	0x3240 ,
	0x3340 ,
	0x3440 ,
	0x3501 ,
	0x3600 ,
	0x3708 ,
	0x3818 ,
	0x3900 ,
	0x3A10 ,
	0x3B10 ,
	0x3C10 ,
	0x3D10 ,
	0x3E04 ,
	0x3F08 ,
	0x4018 ,
	0x4104 ,
	0x43FF ,
	0x44FF ,
	0x45FF ,
	0x46FF ,
	0x4750 ,
	0x4850 ,
	0x4950 ,
	0x4A50 ,
	0x4E00 ,
	0x4F10 ,
	0x5020 ,
	0x5100 ,
	0x5200 ,
	0x5310 ,
	0x5420 ,
	0x5500 ,
	0x5600 ,
	0x5704 ,
	0x5808 ,
	0x5900 ,
	0x5B80 ,
	0x5D00 ,
	0x5E00 ,
	0x5F00 ,
	0x6051 ,
	0x6151 ,
	0x6504 ,
	0x6604 ,
	0x6704 ,
	0x6804 ,
	0x6904 ,
	0x6A04 ,
	0x6B04 ,
	0x6C04 ,
	0x6D7F ,
	0x6E7F ,
	0x6F7F ,
	0x707F ,
	0x717F ,
	0x727F ,
	0x737F ,
	0x747F ,
	0x7700 ,
	0x7804 ,
	0x7908 ,
	0x7A00 ,
	0x7B10 ,
	0x7C16 ,
	0x7D20 ,
	0x7E10 ,
	0x7FFF ,
	0x8200 ,
	0x9780 ,
	0x9880 ,
	0x9980 ,
	0x9A80 ,
	0x9B40 ,
	0x9C40 ,
	0x9D40 ,
	0x9E40 ,
	0xA000 ,
	0xA17F ,
	0xA27F ,
	0xA37F ,
	0xA47F ,
	0xA500 ,
	0xA600 ,
	0xA700 ,
	0xA800 ,
	0xAC00 ,
	0xAD00 ,
	0xB540 ,
	0xB640 ,
	0xB740 ,
	0xB840 ,
	0xB940 ,
	0xBA40 ,
	0xBB40 ,
	0xBD00 ,
	0xBE00 ,
	0xBF00 ,
	0xC000 ,
	0xCE00 ,
	0xCF08 ,
	0xD008 ,
	0xD108 ,
	0xD20F ,
	0xD310 ,
	0xD428 ,
	0xD597 ,
	0xD60A ,
	0xD7A0 ,
	0xDC00 ,
	0xDD04 ,
	0xDE0C ,
	0xDF19 ,
	0xE023 ,
	0xE132 ,
	0xE241 ,
	0xE355 ,
	0xE469 ,
	0xE587 ,
	0xE69B ,
	0xE7B1 ,
	0xE8C9 ,
	0xE9E3 ,
	0xEAFF ,
	0xEC00 ,
	0xED00 ,
	0xEE00 ,
	0xEF00 ,
	0xF120 ,
	0xF220 ,
	0xF320 ,
	0xF420 ,
	0xF518 ,
	0xF618 ,
	0xF718 ,
	0xF818 ,
	0xF900 ,
	0xFA00 ,
	0xFB00 ,
	0xFC00 ,
	0xFD40 ,
	0x0304 ,
	0x0498 ,
	0x0565 ,
	0x06A0 ,
	0x0700 ,
	0x0E80 ,
	0x0FA0 ,
	0x10FF ,
	0x11EE ,
	0x1202 ,
	0x1307 ,
	0x1402 ,
	0x1507 ,
	0x1602 ,
	0x1707 ,
	0x1800 ,
	0x1900 ,
	0x1A28 ,
	0x1B02 ,
	0x1C47 ,
	0x1DE0 ,
	0x1E04 ,
	0x1F8F ,
	0x20C0 ,
	0x2140 ,
	0x2200 ,
	0x2380 ,
	0x2400 ,
	0x2501 ,
	0x2600 ,
	0x2700 ,
	0x2801 ,
	0x2940 ,
	0x2A00 ,
	0x2C66 ,
	0x2E05 ,
	0x2F00 ,
	0x3008 ,
	0x3108 ,
	0x3208 ,
	0x3308 ,
	0x3408 ,
	0x3510 ,
	0x3640 ,
	0x3780 ,
	0x38FF ,
	0x3900 ,
	0x3A80 ,
	0x4108 ,
	0x4210 ,
	0x431A ,
	0x4425 ,
	0x4504 ,
	0x4670 ,
	0x4780 ,
	0x4804 ,
	0x4904 ,
	0x4A05 ,
	0x4B00 ,
	0x4CFF ,
	0x4DFF ,
	0x4F03 ,
	0x5000 ,
	0x5110 ,
	0x52F0 ,
	0x5302 ,
	0x5402 ,
	0x5540 ,
	0x5600 ,
	0x57C0 ,
	0x5804 ,
	0x596E ,
	0x5A45 ,
	0x5B27 ,
	0x5C4F ,
	0x5D64 ,
	0x5EC4 ,
	0x5F3C ,
	0x601E ,
	0x614F ,
	0x6278 ,
	0x6343 ,
	0x64A3 ,
	0x6528 ,
	0x663C ,
	0x6880 ,
	0x6980 ,
	0x6A80 ,
	0x6B80 ,
	0x6C80 ,
	0x6D80 ,
	0x6E30 ,
	0x6F50 ,
	0x705E ,
	0x7180 ,
	0x7280 ,
	0x7306 ,
	0x7404 ,
	0x7500 ,
	0x7600 ,
	0x77FF ,
	0x78FF ,
	0x7900 ,
	0x7A00 ,
	0x7BFF ,
	0x7CFF ,
	0x7D00 ,
	0x7E80 ,
	0x7F01 ,
	0x8000 ,
	0x82F0 ,
	0x8300 ,
	0x8400 ,
	0x8500 ,
	0x8600 ,
	0x8700 ,
	0x8800 ,
	0x8900 ,
	0x8A00 ,
	0x8B00 ,
	0x8C00 ,
	0x8D00 ,
	0x8E06 ,
	0x8F00 ,
	0x9010 ,
	0x9100 ,
	0x9220 ,
	0x9300 ,
	0x9402 ,
	0x9500 ,
	0x9608 ,
	0x9700 ,
	0x9820 ,
	0x9950 ,
	0x9A28 ,
	0x9B00 ,
	0x9C01 ,
	0x9F90 ,
	0xA080 ,
	0xA103 ,
	0xA203 ,
	0xA300 ,
	0xA400 ,
	0xA50C ,
	0xA62A ,
	0xA700 ,
	0xA830 ,
	0xA9A8 ,
	0xAB00 ,
	0xAC00 ,
	0xAD06 ,
	0xAE0A ,
	0xAF0D ,
	0xB010 ,
	0xB25D ,
	0xB300 ,
	0xB45E ,
	0xB500 ,
	0xB62C ,
	0xB740 ,
	0xB82B ,
	0xBA90 ,
	0xBB80 ,
	0xBC00 ,
	0xC000 ,
	0xC100 ,
	0xC200 ,
	0xC300 ,
	0xC400 ,
	0x0302 ,
	0x8A01 ,
	0x0302 ,
	0x5B00 ,
	0x5C0C ,
	0x5D20 ,
	0x5E2F ,
	0x5F3A ,
	0x604B ,
	0x6158 ,
	0x626D ,
	0x637F ,
	0x649C ,
	0x65B4 ,
	0x66CA ,
	0x67DD ,
	0x68EF ,
	0x69FF ,
	0x0301 ,
	0x9278 ,
	0x9378 ,
	0x9450 ,
	0x9578 ,
	0x9678 ,
	0x9750 ,
	0x0304 ,
	0x8D00 ,
	0x8E0A ,
	0x8F00 ,
	0x9010 ,
	0x9100 ,
	0x9218 ,
	0x0304 ,
	0x0564 ,
	0x0304 ,
	0x1204 ,
	0x135F ,
	0x1404 ,
	0x155F ,
	0x1604 ,
	0x175F ,
	0x1800 ,
	0x1900 ,
	0x1A20 ,
	0x1B00 ,
	0x1C68 ,
	0x1DE8 ,
	0x1E00 ,
	0x1F68 ,
	0x20E8 ,
	0x0304 ,
	0x0E81 ,
	0x0FB0 ,
	0x10B0 ,
	0x0302 ,
	0x3337 ,
	0x3490 ,
	0x3587 ,
	0x368E ,
	0x373B ,
	0x388C ,
	0x3987 ,
	0x3A98 ,
	0x3B3F ,
	0x0303 ,
	0x0425 ,
	0x0500 ,
	0x0600 ,
	0x0725 ,
	0x0825 ,
	0x0900 ,
	0x0A00 ,
	0x0B25 ,
	0x0C25 ,
	0x0D00 ,
	0x0E00 ,
	0x0F25 ,
	0x1920 ,
	0x0304 ,
	0x6880 ,
	0x6980 ,
	0x6A80 ,
	0x6B7D ,
	0x6C80 ,
	0x6D7D ,
	0x0302 ,
	0x0A95 ,
	0x0302 ,
	0x04F7 ,
	0x05DE ,
	0x0902 ,
	0x0B12 ,
	0x0302 ,
	0x30E0 ,
	0x31E0 ,
	0x0303 ,
	0xFDFF ,
	0x0302 ,
	0x0B90 ,
	0x0302 ,
	0x2B1F ,
	0x0302 ,
	0x95F0 ,
	0x96F0 ,
	0x97F7 ,
	0x0303 ,
	0x2600 ,
	0x276E ,
	0x287A ,
	0x2A00 ,
	0x2B0C ,
	0x2C1C ,
	0x6D22 ,
	0x6E22 ,
	0x6F22 ,
	0x7022 ,
	0x7129 ,
	0x7229 ,
	0x7329 ,
	0x7429 ,
	0x9B3A ,
	0x9C3A ,
	0x9D3A ,
	0x9E3A ,
	0xA118 ,
	0xA218 ,
	0xA318 ,
	0xA418 ,
	0x0304 ,
	0xC060 ,
	0xC160 ,
	0xC280 ,
	0xF128 ,
	0xF228 ,
	0xF328 ,
	0xF428 ,
	0xF518 ,
	0xF618 ,
	0xF718 ,
	0xF818 ,
	0xF918 ,
	0xFA18 ,
	0xFB18 ,
	0xFC18 ,

	0x0303 ,
	0xB560 ,
	0xB62D ,
	0xB719 ,
	0xB80C ,
	0xB90D ,
	0xBA0A ,
	0xBB09 ,
	0xFFFF,
};

static const unsigned short init_p1210m_lvds_config[] = {			// es
	0xFFFF,
};

static const unsigned short init_p1210m_bayer_3dnr_on_config[] = {
	0xFFFF,
};

static const unsigned short init_p1210m_bayer_3dnr_off_config[] = {
	0xFFFF,
};

static const unsigned short init_p1210m_lvds_3dnr_on_config[] = {
	0xFFFF,
};

static const unsigned short init_p1210m_lvds_3dnr_off_config[] = {
	0xFFFF,
};

static const struct isp_3dnr_attr init_p1210m_bayer_3dnr_attr = {
	.on = init_p1210m_bayer_3dnr_on_config,
	.off = init_p1210m_bayer_3dnr_off_config,
};

static const struct isp_3dnr_attr init_p1210m_lvds_3dnr_attr = {
	.on = init_p1210m_lvds_3dnr_on_config,
	.off = init_p1210m_lvds_3dnr_off_config,
};

/* PS3210M */

/* 20160325 ps3210K based */
static const unsigned short init_p3210m_bayer_config[] = {		// es
    0x0300, 
	0x0503, 
	0x0608, 		// 30 fps
    0x0797, 
	0x0804, 
    0x0964, 
    0x0A04, 
    0x0B64, 
	0x0C00, 
    0x0D0D, 
    0x0E00, 
    0x0F0E, 
	0x1007, 
    0x118C, 
	0x1204, 
    0x1345, 
    0x1400, 
    0x1519, 	// 26
    0x1604, 
    0x1753, 	// 1105	
    0x1A00, 
    0x1B00, 
    0x1F00, 
    0x2008, 
    0x2354, 
    0x2400, 
    0x2507, 
    0x2681, 
    0x276B, 
    0x2830, 
    0x2934, 
    0x2A34, 
    0x2B34, 
    0x2C34, 
    0x2D34, 
    0x2E6B, 
    0x2F6D, 
    0x3033, 
    0x310C, 
    0x3234, 
    0x3334, 
    0x3400, 
    0x3500, 
    0x3600, 
    0x3700, 
    0x3800, 
    0x3941, 
    0x3A18, 
    0x3F1B, 
    0x4030, 
    0x410B, 
    0x4202, 
    0x4400, 
    0x4501, 
    0x4600, 
    0x4701, 
    0x4F40, 
    0x5000, 
    0x5105, 
    0x5279, 
    0x5304, 
    0x548D, 
    0x5540, 
    0x5600, 
    0x5700, 
    0x5840, 
    0x5900, 
    0x5ABB, 
    0x5B80, 
    0x5C00, 
    0x5DE1, 
    0x5E00, 
    0x5F04, 
    0x6065, 
    0x6800, 
    0x69A0, 
    0x6A08, 
    0x6BC0, 
    0x6C80, 
    0x6DC0, 
    0x6E18, 
    0x6F20, 
    0x7400, 
    0x7500, 
    0x7600, 
    0x7700, 
    0x7800, 
    0x7900, 
    0x7A00, 
    0x7B25, 
    0x7C04, 
    0x7D77, 
    0x7E08, 
    0x7F00, 
    0x8004, 
    0x810E, 
    0x8200, 
    0x8307, 
    0x8400, 
    0x8500, 
    0x8600, 
    0x8703, 
    0x88FF, 
    0x8A02, 
    0x8B47, 
    0x8CE0, 
    0x8D04, 
    0x8E00, 
    0x8F01, 
    0x9000, 
    0x9100, 
    0x9280, 
    0x9364, 
    0x9464, 
    0x95C8, 
    0x9601, 
    0x9704, 
    0x9877, 
    0x9900, 
    0x9A00, 
    0x9B00, 
    0x9C00, 
    0x9D00, 
    0x9E25, 
    0x9F00, 
    0xA000, 
    0xA100, 
    0xA200, 
    0xA300, 
    0xA410, 
    0xA510, 
    0xA610, 
    0xA710, 
    0xA810, 
    0xAB90, 
    0xAC35, 
    0xAD22, 
    0xAED2, 
    0xAF10, 
    0xB092, 
    0xB151, 
    0xB25A, 
    0xB3F0, 
    0xB4EB, 
    0xB580, 
    0xB680, 
    0xB76A, 
    0xB8CA, 
    0xB9DD, 
    0xBAA9, 
    0xBBA5, 
    0xBC10, 
    0xBD29, 
    0xBEF0, 
    0xBF6D, 
    0xC010, 
    0xC180, 
    0xC280, 
    0xC390, 
    0xC435, 
    0xC522, 
    0xC6D2, 
    0xC710, 
    0xC892, 
    0xC951, 
    0xCA5A, 
    0xCBF0, 
    0xCCEB, 
    0xCD80, 
    0xCE80, 
    0xD002, 
    0xD107, 
    0xD280, 
    0xD3C2, 
    0xD407, 
    0xD580, 
    0xD604, 
    0xD738, 
    0xD800, 
    0xD900, 
    0xDA00, 
    0xDB00, 
    0xDC04, 
    0xDD65, 
    0xDE00, 
    0xDF00, 
    0xE01A, 
    0xE200, 
    0xE300, 
    0xE7FF, 
    0xEA02, 
    0xEB58, 
    0xF0B6, 
    0xF1AB, 
    0xF29D, 
    0xF380, 
    0xF4F1, 
    0xF5EC, 
    0xF6DA, 
    0xF7C7, 
    0xF8FF, 
    0xF900, 
    0xFA80, 
    0xFB10, 
    0xFD02, 
    0xFE80, 
    0x0301, 
    0x0405, 
    0x05E3, 
    0x060C, 
    0x0740, 
    0x0800, 
    0x0901, 
    0x0A00, 
    0x0B01, 
    0x1400, 
    0x1500, 
    0x1600, 
    0x1700, 
    0x1800, 
    0x1900, 
    0x1AFF, 
    0x1B7F, 
    0x1C00, 
    0x1E00, 
    0x1F00, 
    0x2000, 
    0x2100, 
    0x2200, 
    0x2300, 
    0x24FF, 
    0x257F, 
    0x2600, 
    0x2820, 
    0x2920, 
    0x2A20, 
    0x2B20, 
    0x2C00, 
    0x2D00, 
    0x2E00, 
    0x2F00, 
    0x3101, 
    0x3240, 
    0x3300, 
    0x3400, 
    0x3540, 
    0x3709, 
    0x3820, 
    0x3909, 
    0x3A1F, 
    0x3B00, 
    0x3C06, 
    0x3D00, 
    0x4FB7, 
    0x50C0, 
    0x51C1, 
    0x52C2, 
    0x53C3, 
    0x54C4, 
    0x55C5, 
    0x5966, 
    0x5A03, 
    0x5B01, 
    0x5C01, 
    0x5D01, 
    0x5E01, 
    0x5F01, 
    0x7400, 
    0x7500, 
    0x768B, 
    0x7780, 
    0x7800, 
    0x7940, 
    0x7A0B, 
    0x7BA0, 
    0x7C1A, 
    0x7D28, 
    0x7E00, 
    0x7F5D, 
    0x8000, 
    0x8180, 
    0x8200, 
    0x8300, 
    0x8400, 
    0x8500, 
    0x8600, 
    0x8700, 
    0x8802, 
    0x89E8, 
    0x8A05, 
    0x8BD0, 
    0x8C00, 
    0x8D3A, 
    0x8E20, 
    0x8F00, 
    0x9008, 
    0x9298, 
    0x9398, 
    0x9450, 
    0x9590, 
    0x9690, 
    0x9750, 
    0x9800, 
    0x9901, 
    0x9A03, 
    0x9B00, 
    0x9C02, 
    0x9D07, 
    0x9E00, 
    0x9F81, 
    0xA0C0, 
    0xA104, 
    0xA20E, 
    0xA300, 
    0xA500, 
    0xA600, 
    0xA700, 
    0xA800, 
    0xA900, 
    0xAA00, 
    0xAB00, 
    0xAC00, 
    0xAD00, 
    0xAE00, 
    0xAF00, 
    0xB000, 
    0xB100, 
    0xB200, 
    0xB300, 
    0xB400, 
    0xB500, 
    0xB600, 
    0xB700, 
    0xB800, 
    0xB900, 
    0xBA00, 
    0xBB00, 
    0xBC00, 
    0xBD00, 
    0xBE00, 
    0xBF00, 
    0xC000, 
    0xC100, 
    0xC200, 
    0xC300, 
    0xC400, 
    0xC500, 
    0xC600, 
    0xC700, 
    0xC800, 
    0xC900, 
    0xCA00, 
    0xCB00, 
    0xCC00, 
    0xCD00, 
    0xCE00, 
    0xCF00, 
    0xD000, 
    0xD100, 
    0xD200, 
    0xD300, 
    0xD400, 
    0xD500, 
    0xD600, 
    0xD700, 
    0xD800, 
    0xD900, 
    0xDA00, 
    0xDB00, 
    0xDC00, 
    0xDD00, 
    0xDE00, 
    0xDF00, 
    0xE000, 
    0xE100, 
    0xE200, 
    0xE300, 
    0xE400, 
    0xE500, 
    0xE600, 
    0xE700, 
    0xE800, 
    0xE900, 
    0xEB00, 
    0xEC00, 
    0xED00, 
    0xEE00, 
    0xEF00, 
    0xF000, 
    0xF100, 
    0xF200, 
    0x0302, 
    0x04F7, 
    0x05DC, 
    0x0600, 
    0x07E2, 
    0x0800, 
    0x0900, 
    0x0A15, 
    0x0B90, 
    0x0C00, 
    0x0D51, 
    0x0E51, 
    0x0F51, 
    0x1051, 
    0x1151, 
    0x1251, 
    0x1351, 
    0x1451, 
    0x1551, 
    0x1651, 
    0x1751, 
    0x1851, 
    0x1951, 
    0x1A51, 
    0x1B51, 
    0x1C51, 
    0x1D00, 
    0x1E02, 
    0x1F02, 
    0x2000, 
    0x2100, 
    0x2200, 
    0x2300, 
    0x2400, 
    0x2500, 
    0x2600, 
    0x2700, 
    0x2800, 
    0x2900, 
    0x2B14, 
    0x2C00, 
    0x2D40, 
    0x2E30, 
    0x3080, 
    0x3180, 
    0x3337, 
    0x3490, 
    0x3587, 
    0x368E, 
    0x373B, 
    0x388C, 
    0x3982, 
    0x3A98, 
    0x3B3B, 
    0x3D00, 
    0x3E03, 
    0x3F0C, 
    0x4019, 
    0x4126, 
    0x423F, 
    0x4352, 
    0x446E, 
    0x4582, 
    0x46A1, 
    0x47B9, 
    0x48CE, 
    0x49E0, 
    0x4AF0, 
    0x4BFF, 
    0x4C00, 
    0x4D0B, 
    0x4E17, 
    0x4F22, 
    0x502E, 
    0x5140, 
    0x5250, 
    0x536E, 
    0x5488, 
    0x55AE, 
    0x56CA, 
    0x57DC, 
    0x58EC, 
    0x59F6, 
    0x5AFF, 
    0x5B00, 
    0x5C03, 
    0x5D0C, 
    0x5E19, 
    0x5F26, 
    0x603F, 
    0x6152, 
    0x626E, 
    0x6382, 
    0x64A1, 
    0x65B9, 
    0x66CE, 
    0x67E0, 
    0x68F0, 
    0x69FF, 
    0x6A00, 
    0x6B0C, 
    0x6C19, 
    0x6D27, 
    0x6E34, 
    0x6F4B, 
    0x705C, 
    0x7174, 
    0x7286, 
    0x73A4, 
    0x74BA, 
    0x75CE, 
    0x76E0, 
    0x77F1, 
    0x78FF, 
    0x7A8C, 
    0x7B20, 
    0x7C20, 
    0x7D00, 
    0x7E0A, 
    0x7F80, 
    0x8025, 
    0x8100, 
    0x8200, 
    0x8325, 
    0x8680, 
    0x8780, 
    0x887F, 
    0x8A00, 
    0x8B00, 
    0x8D00, 
    0x8EFE, 
    0x8F00, 
    0x9140, 
    0x9240, 
    0x9340, 
    0x9440, 
    0x9500, 
    0x9600, 
    0x9700, 
    0x9800, 
    0x9A80, 
    0x9B20, 
    0x9C80, 
    0x9D00, 
    0xA000, 
    0xA101, 
    0xA202, 
    0xA380, 
    0xA400, 
    0xA501, 
    0xA600, 
    0xA7F0, 
    0xA800, 
    0xA980, 
    0xAA80, 
    0xAC00, 
    0xAD00, 
    0xAE00, 
    0xAF0C, 
    0xB004, 
    0xB14B, 
    0xB300, 
    0xB400, 
    0xB507, 
    0xB67F, 
    0xB700, 
    0xB800, 
    0xB904, 
    0xBA37, 
    0xBB02, 
    0xBC80, 
    0xBD04, 
    0xBEFF, 
    0xBF01, 
    0xC068, 
    0xC102, 
    0xC2CF, 
    0xC303, 
    0xC4C0, 
    0xC502, 
    0xC61C, 
    0xC700, 
    0xC800, 
    0xC907, 
    0xCA7F, 
    0xCB00, 
    0xCC00, 
    0xCD04, 
    0xCE37, 
    0xD000, 
    0xD100, 
    0xD200, 
    0xD300, 
    0xD400, 
    0xD503, 
    0xD6C0, 
    0xD801, 
    0xD941, 
    0xDA02, 
    0xDB80, 
    0xDC00, 
    0xDDA1, 
    0xDE01, 
    0xDF40, 
    0xE008, 
    0xE100, 
    0xE340, 
    0xE440, 
    0xE540, 
    0xE640, 
    0xE740, 
    0xE840, 
    0xE940, 
    0xEA40, 
    0xEB08, 
    0xEC00, 
    0xED80, 
    0xEE80, 
    0xEF04, 
    0xF004, 
    0xF104, 
    0xF200, 
    0xF33C, 
    0xF402, 
    0xF53A, 
    0xF600, 
    0xF700, 
    0xF800, 
    0xF900, 
    0xFA00, 
    0xFB00, 
    0xFC00, 
    0xFD00, 
    0x0303, 
    0x0437, 
    0x0500, 
    0x0600, 
    0x0732, 
    0x0825, 
    0x0900, 
    0x0A00, 
    0x0B25, 
    0x0C25, 
    0x0D00, 
    0x0E00, 
    0x0F25, 
    0x1003, 
    0x1100, 
    0x1203, 
    0x1300, 
    0x1404, 
    0x1500, 
    0x163A, 
    0x1750, 
    0x185A, 
    0x1920, 
    0x1B00, 
    0x1C5D, 
    0x1D00, 
    0x1E40, 
    0x1F00, 
    0x205E, 
    0x2200, 
    0x2300, 
    0x2400, 
    0x2500, 
    0x2600, 
    0x2710, 
    0x2820, 
    0x2900, 
    0x2A00, 
    0x2B0C, 
    0x2C1C, 
    0x2D00, 
    0x2E5F, 
    0x2F3F, 
    0x303F, 
    0x317F, 
    0x3240, 
    0x3340, 
    0x3440, 
    0x3501, 
    0x3600, 
    0x3708, 
    0x3818, 
    0x3900, 
    0x3A10, 
    0x3B10, 
    0x3C10, 
    0x3D10, 
    0x3E04, 
    0x3F08, 
    0x4018, 
    0x4104, 
    0x43FF, 
    0x44FF, 
    0x45FF, 
    0x46FF, 
    0x4750, 
    0x4850, 
    0x4950, 
    0x4A50, 
    0x4E00, 
    0x4F10, 
    0x5020, 
    0x5100, 
    0x5200, 
    0x5310, 
    0x5420, 
    0x5500, 
    0x5600, 
    0x5704, 
    0x5808, 
    0x5900, 
    0x5B80, 
    0x5D00, 
    0x5E00, 
    0x5F00, 
    0x6051, 
    0x6151, 
    0x6504, 
    0x6604, 
    0x6704, 
    0x6804, 
    0x6904, 
    0x6A04, 
    0x6B04, 
    0x6C04, 
    0x6D7F, 
    0x6E7F, 
    0x6F7F, 
    0x707F, 
    0x717F, 
    0x727F, 
    0x737F, 
    0x747F, 
    0x7700, 
    0x7804, 
    0x7908, 
    0x7A00, 
    0x7B10, 
    0x7C16, 
    0x7D20, 
    0x7E10, 
    0x7FFF, 
    0x8200, 
    0x9780, 
    0x9880, 
    0x9980, 
    0x9A80, 
    0x9B40, 
    0x9C40, 
    0x9D40, 
    0x9E40, 
    0xA000, 
    0xA17F, 
    0xA27F, 
    0xA37F, 
    0xA47F, 
    0xA500, 
    0xA600, 
    0xA700, 
    0xA800, 
    0xAC00, 
    0xAD00, 
    0xB540, 
    0xB640, 
    0xB740, 
    0xB840, 
    0xB940, 
    0xBA40, 
    0xBB40, 
    0xBD00, 
    0xBE00, 
    0xBF00, 
    0xC000, 
    0xCE00, 
    0xCF08, 
    0xD008, 
    0xD108, 
    0xD20F, 
    0xD310, 
    0xD428, 
    0xD597, 
    0xD60A, 
    0xD7A0, 
    0xDC00, 
    0xDD04, 
    0xDE0C, 
    0xDF19, 
    0xE023, 
    0xE132, 
    0xE241, 
    0xE355, 
    0xE469, 
    0xE587, 
    0xE69B, 
    0xE7B1, 
    0xE8C9, 
    0xE9E3, 
    0xEAFF, 
    0xEC00, 
    0xED00, 
    0xEE00, 
    0xEF00, 
    0xF120, 
    0xF220, 
    0xF320, 
    0xF420, 
    0xF518, 
    0xF618, 
    0xF718, 
    0xF818, 
    0xF900, 
    0xFA00, 
    0xFB00, 
    0xFC00, 
    0xFD40, 
    0x0304, 
    0x0498, 
    0x0565, 
    0x06A0, 
    0x0700, 
    0x0E80, 
    0x0FA0, 
    0x10FF, 
    0x11EE, 
    0x1202, 
    0x1307, 
    0x1402, 
    0x1507, 
    0x1602, 
    0x1707, 
    0x1800, 
    0x1900, 
    0x1A28, 
    0x1B02, 
    0x1C47, 
    0x1DE0, 
    0x1E04, 
    0x1F8F, 
    0x20C0, 
    0x2140, 
    0x2200, 
    0x2380, 
    0x2400, 
    0x2501, 
    0x2600, 
    0x2700, 
    0x2801, 
    0x2940, 
    0x2A00, 
    0x2C66, 
    0x2E05, 
    0x2F00, 
    0x3008, 
    0x3108, 
    0x3208, 
    0x3308, 
    0x3408, 
    0x3510, 
    0x3640, 
    0x3780, 
    0x38FF, 
    0x3900, 
    0x3A80, 
    0x4108, 
    0x4210, 
    0x431A, 
    0x4425, 
    0x4504, 
    0x4670, 
    0x4780, 
    0x4804, 
    0x4904, 
    0x4A05, 
    0x4B00, 
    0x4CFF, 
    0x4DFF, 
    0x4F03, 
    0x5000, 
    0x5110, 
    0x52F0, 
    0x5302, 
    0x5402, 
    0x5540, 
    0x5600, 
    0x57C0, 
    0x5804, 
    0x596E, 
    0x5A45, 
    0x5B27, 
    0x5C4F, 
    0x5D64, 
    0x5EC4, 
    0x5F3C, 
    0x601E, 
    0x614F, 
    0x6278, 
    0x6343, 
    0x64A3, 
    0x6528, 
    0x663C, 
    0x6880, 
    0x6980, 
    0x6A80, 
    0x6B80, 
    0x6C80, 
    0x6D80, 
    0x6E30, 
    0x6F50, 
    0x705E, 
    0x7180, 
    0x7280, 
    0x7306, 
    0x7404, 
    0x7500, 
    0x7600, 
    0x77FF, 
    0x78FF, 
    0x7900, 
    0x7A00, 
    0x7BFF, 
    0x7CFF, 
    0x7D00, 
    0x7E80, 																// es
    0x7F01, 
    0x8000, 
    0x82F0, 
    0x8300, 
    0x8400, 
    0x8500, 
    0x8600, 
    0x8700, 
    0x8800, 
    0x8900, 
    0x8A00, 
    0x8B00, 
    0x8C00, 
    0x8D00, 
    0x8E06, 
    0x8F00, 
    0x9010, 
    0x9100, 
    0x9220, 
    0x9300, 
    0x9402, 
    0x9500, 
    0x9608, 
    0x9700, 
    0x9820, 
    0x9950, 
    0x9A28, 
    0x9B00, 
    0x9C01, 
    0x9F90, 
    0xA080, 
    0xA103, 
    0xA203, 
    0xA300, 
    0xA400, 
    0xA50C, 
    0xA62A, 
    0xA700, 
    0xA830, 
    0xA9A8, 
    0xAB00, 
    0xAC00, 
    0xAD06, 
    0xAE0A, 
    0xAF0D, 
    0xB010, 
    0xB25D, 
    0xB300, 
    0xB45E, 
    0xB500, 
    0xB62C, 
    0xB740, 
    0xB82B, 
    0xBA90, 
    0xBB80, 
    0xBC00, 
    0xC000, 
    0xC100, 
    0xC200, 
    0xC300, 
    0xC400, 
    0x0302, 
    0x8A01, 
    0x0302, 
    0x5B00, 
    0x5C0C, 
    0x5D20, 
    0x5E2F, 
    0x5F3A, 
    0x604B, 
    0x6158, 
    0x626D, 
    0x637F, 
    0x649C, 
    0x65B4, 
    0x66CA, 
    0x67DD, 
    0x68EF, 
    0x69FF, 
    0x0301, 
    0x9278, 
    0x9378, 
    0x9450, 
    0x9578, 
    0x9678, 
    0x9750, 
    0x0304, 
    0x8D00, 
    0x8E0A, 
    0x8F00, 
    0x9010, 
    0x9100, 
    0x9218, 
    0x0304, 
    0x0564, 
    0x0304, 
    0x1204, 
    0x135F, 
    0x1404, 
    0x155F, 
    0x1604, 
    0x175F, 
    0x1800, 
    0x1900, 
    0x1A20, 
    0x1B00, 
    0x1C68, 
    0x1DE8, 
    0x1E00, 
    0x1F68, 
    0x20E8, 
    0x0304, 
    0x0E81, 
    0x0FB0, 
    0x10B0, 
    0x0302, 
    0x3337, 
    0x3490, 
    0x3587, 
    0x368E, 
    0x373B, 
    0x388C, 
    0x3987, 
    0x3A98, 
    0x3B3F, 
    0x0303, 
    0x0425, 
    0x0500, 
    0x0600, 
    0x0725, 
    0x0825, 
    0x0900, 
    0x0A00, 
    0x0B25, 
    0x0C25, 
    0x0D00, 
    0x0E00, 
    0x0F25, 
    0x1920, 
    0x0304, 
    0x6880, 
    0x6980, 
    0x6A80, 
    0x6B7D, 
    0x6C80, 
    0x6D7D, 
    0x0302, 
    0x0A95, 
    0x0302, 
    0x04F7, 
    0x05DE, 
    0x0902, 
    0x0B12, 
    0x0302, 
    0x30E0, 
    0x31E0, 
    0x0303, 
    0xFDFF, 
    0x0302, 
    0x0B90, 
    0x0302, 
    0x2B1F, 
    0x0302, 
    0x95F0, 
    0x96F0, 
    0x97F7, 
    0x0303, 
    0x2600, 
    0x276E, 
    0x287A, 
    0x2A00, 
    0x2B0C, 
    0x2C1C, 
    0x6D22, 
    0x6E22, 
    0x6F22, 
    0x7022, 
    0x7129, 
    0x7229, 
    0x7329, 
    0x7429, 
    0x9B3A, 
    0x9C3A, 
    0x9D3A, 
    0x9E3A, 
    0xA118, 
    0xA218, 
    0xA318, 
    0xA418, 
    0x0304, 
    0xC060, 
    0xC160, 
    0xC280, 
    0xF128, 
    0xF228, 
    0xF328, 
    0xF428, 
    0xF518, 
    0xF618, 
    0xF718, 
    0xF818, 
    0xF918, 
    0xFA18, 
    0xFB18, 
    0xFC18, 
    0x0303, 
    0xB560, 
    0xB62D, 
    0xB719, 
    0xB80C, 
    0xB90D, 
    0xBA0A, 
    0xBB09, 
    0x0300, 
#if 1	
    0x0608, 		// 30 fps
    0x0797, 
#else
    0x060A, 		// 25 fps
    0x074F, 
#endif
    0x0804, 
    0x0964, 
    0x0a04, 
    0x0b64, 
    0x0300, 
    0x23F0, 
    0x2D01, 
    0x2999, 
    0x4030, 
    0x2500, 
    0x2681, 
    0x0302, 
    0x05DF, 
    0x0300, 
    0x0c00, 
    0x0d05, 
    0x0e00, 
    0x0f05, 
    0x1007, 
    0x1184, 
    0x1204, 
    0x133C, 
    0x1400, 
    0x151A, 
    0x1604, 
    0x1751, 
    0xD407, 
    0xD580, 													// es
    0xD604, 
    0xD738, 
    0x0301, 
    0x0800, 
    0x0901, 
    0x0A00, 
    0x0B01, 
    0x0303, 
    0x1B00, 
    0x1C5D, 
    0x1D00, 
    0x1E40, 
    0x1F00, 
    0x205E, 
    0x0304, 
    0xB25D, 
    0xB300, 
    0xB45E, 
    0xB500, 
    0xB62C, 
    0xB740, 
    0xB82B, 
    0x2700, 
    0x2801, 
    0x2940, 
    0x2A00, 
    0x0301, 
    0x3101, 
    0x3240, 
    0x3300, 
    0x0300, 
    0x0400, 
    0x0300, 
    0xE300, 
    0x0300, 
    0xD3C2, 
    0x0300, 
    0x2350, 
    0x402C, 
    0x0301, 
    0x59EE, 
    0x0302, 
    0x0800, 
    0x0302, 
    0xB300, 
    0xB400, 
    0xB507, 
    0xB67F, 
    0xB700, 
    0xB800, 
    0xB904, 
    0xBA37, 
    0xBB02, 
    0xBC80, 
    0xBD04, 
    0xBEFF, 
    0xBF01, 
    0xC068, 
    0xC102, 
    0xC2CF, 
    0xC303, 
    0xC4C0, 
    0xC502, 
    0xC61C, 
    0xC700, 
    0xC800, 
    0xC907, 
    0xCA7F, 
    0xCB00, 
    0xCC00, 
    0xCD04, 
    0xCE37, 
    0x0305, 
    0xE4EE, 
    0xE301, 
    0x6504, 
    0x0301, 
    0xA501, 
    0xA631, 
    0xA701, 
    0xA8C0, 
    0xA901, 
    0xAA32, 
    0xAB01, 
    0xACC1, 
    0xAD01, 
    0xAE33, 
    0xAF01, 
    0xB0C2, 
    0xB101, 
    0xB234, 
    0xB301, 
    0xB4C3, 
    0xB501, 
    0xB635, 
    0xB701, 
    0xB8C4, 
    0xB901, 
    0xBA26, 
    0xBB01, 
    0xBCB6, 
    0xBD01, 
    0xBE2B, 
    0xBF01, 
    0xC0B7, 
    0xE504, 
    0xE635, 
    0xE970, 
    0xEB04, 
    0xEC11, 
    0xED01, 
    0xEEDB, 
    0xEF01, 
    0xF001, 
    0xF1DD, 
    0xF201, 
    0x0302, 
    0x04F7, 
    0x05DC, 
	0x0302,	// // bank C
	//0x05DF,	// // isp_func_1 (default(DC), bayer sequence	//
	0x05DE,	// // isp_func_1 (default(DC), bayer sequence	// need to set sync_control_1 to 0x20DC ==> 0x24
	0x0301,	// // bank B
	0x59EE,	// i2c_slave_addr		0x32 (0x64)

    0x0302, 
    0x9B24, 	// !!!!! CS ISP should be pclk inverted !!!!!!

    0xFFFF, 
};

static const unsigned short init_p3210m_lvds_config[] = {
    0xFFFF, 
};

static const unsigned short init_p3210m_bayer_3dnr_on_config[] = {			// es
	0xFFFF,
};

static const unsigned short init_p3210m_bayer_3dnr_off_config[] = {
	0xFFFF,
};

static const unsigned short init_p3210m_lvds_3dnr_on_config[] = {
	0xFFFF,
};

static const unsigned short init_p3210m_lvds_3dnr_off_config[] = {
	0xFFFF,
};

static const struct isp_3dnr_attr init_p3210m_bayer_3dnr_attr = {
	.on = init_p3210m_bayer_3dnr_on_config,
	.off = init_p3210m_bayer_3dnr_off_config,
};

static const struct isp_3dnr_attr init_p3210m_lvds_3dnr_attr = {
	.on = init_p3210m_lvds_3dnr_on_config,
	.off = init_p3210m_lvds_3dnr_off_config,
};

/* PS3210P */
static const unsigned short init_p3210p_bayer_config[] = {					// es
	0xFFFF,
};

static const unsigned short init_p3210p_lvds_config[] = {
	0xFFFF,
};

static const unsigned short init_p3210p_bayer_3dnr_on_config[] = {
	0xFFFF,
};

static const unsigned short init_p3210p_bayer_3dnr_off_config[] = {
	0xFFFF,
};

static const unsigned short init_p3210p_lvds_3dnr_on_config[] = {
	0xFFFF,
};

static const unsigned short init_p3210p_lvds_3dnr_off_config[] = {
	0xFFFF,
};

static const struct isp_3dnr_attr init_p3210p_bayer_3dnr_attr = {
	.on = init_p3210p_bayer_3dnr_on_config,
	.off = init_p3210p_bayer_3dnr_off_config,
};

static const struct isp_3dnr_attr init_p3210p_lvds_3dnr_attr = {
	.on = init_p3210p_lvds_3dnr_on_config,
	.off = init_p3210p_lvds_3dnr_off_config,
};

/* PV1219M */

static const unsigned short init_p1219m_bayer_config[] = {				// es
    0x0300,
    0x0031,
    0x0100,
    0x0200,
    0x0300,
    0x0400,
    0x0503,
	0x0608,		// 30 fps
    0x0797,
	0x0804,
    0x0964,
    0x0A04,
    0x0B64,
	0x0C00,
    0x0D01,
    0x0E00,
    0x0F05,
	0x1007,
    0x118C,
	0x1204,
    0x133C,
    0x1400,
    0x151A,	// 26
    0x1604,
    0x1751,	// 1105	
    0x1A00,
    0x1B02,
    0x1F00,
    0x2008,
    0x2354,
    0x2400,
    0x2507,
    0x2681,
    0x276B,
    0x2830,
    0x2934,
    0x2A34,
    0x2B34,
    0x2C34,
    0x2D34,
    0x2E6B,
    0x2F6D,
    0x3033,
    0x310C,
    0x3234,
    0x3334,
    0x3400,
    0x3500,
    0x3600,
    0x3700,
    0x3800,
    0x3941,
    0x3A18,
    0x3F1B,
    0x4030,
    0x410B,
    0x4202,
    0x4400,
    0x4501,
    0x4600,
    0x4701,
    0x4F40,
    0x5000,
    0x5105,
    0x5279,
    0x5304,
    0x548D,
    0x5540,
    0x5600,
    0x5700,
    0x5840,
    0x5900,
    0x5ABB,
    0x5B80,
    0x5C00,
    0x5DE1,
    0x5E00,
    0x5F04,
    0x6065,
    0x6800,
    0x69A0,
    0x6A08,
    0x6BC0,
    0x6C80,
    0x6DC0,
    0x6E18,
    0x6F20,
    0x7400,
    0x7500,
    0x7600,
    0x7700,
    0x7800,
    0x7900,
    0x7A00,
    0x7B25,
    0x7C04,
    0x7D77,
    0x7E08,
    0x7F00,
    0x8004,
    0x810E,
    0x8200,
    0x8307,
    0x8400,
    0x8500,
    0x8600,
    0x8703,
    0x88FF,
    0x8A02,
    0x8B47,
    0x8CE0,
    0x8D04,
    0x8E00,
    0x8F01,
    0x9000,
    0x9100,
    0x9280,
    0x9364,
    0x9464,
    0x95C8,
    0x9601,
    0x9704,
    0x9877,
    0x9900,
    0x9A00,
    0x9B00,
    0x9C00,
    0x9D00,
    0x9E25,
    0x9F00,
    0xA000,
    0xA100,
    0xA200,
    0xA300,
    0xA410,
    0xA510,
    0xA610,
    0xA710,
    0xA810,
    0xAB90,
    0xAC35,
    0xAD22,
    0xAED2,
    0xAF10,
    0xB092,
    0xB151,
    0xB25A,
    0xB3F0,
    0xB4EB,
    0xB580,
    0xB680,
    0xB76A,
    0xB8CA,
    0xB9DD,
    0xBAA9,
    0xBBA5,
    0xBC10,
    0xBD29,
    0xBEF0,
    0xBF6D,
    0xC010,
    0xC180,
    0xC280,
    0xC390,
    0xC435,
    0xC522,
    0xC6D2,
    0xC710,
    0xC892,
    0xC951,
    0xCA5A,
    0xCBF0,
    0xCCEB,
    0xCD80,
    0xCE80,
    0xD002,
    0xD107,
    0xD280,
    0xD3C2,
    0xD407,
    0xD580,
    0xD604,
    0xD738,
    0xD800,
    0xD900,
    0xDA00,
    0xDB00,
    0xDC04,
    0xDD65,
    0xDE00,
    0xDF00,
    0xE01A,
    0xE200,
    0xE300,
    0xE7FF,
    0xEA02,
    0xEB58,
    0xF0B6,
    0xF1AB,
    0xF29D,
    0xF380,
    0xF4F1,
    0xF5EC,
    0xF6DA,
    0xF7C7,
    0xF8FF,
    0xF900,
    0xFA80,
    0xFB10,
    0xFD02,
    0xFE80,
    0x0301,
    0x0405,
    0x05E3,
    0x060C,
    0x0740,
    0x0800,
    0x0901,
    0x0A00,
    0x0B01,
    0x1400,
    0x1500,
    0x1600,
    0x1700,
    0x1800,
    0x1900,
    0x1AFF,
    0x1B7F,
    0x1C00,
    0x1E00,
    0x1F00,
    0x2000,
    0x2100,
    0x2200,
    0x2300,
    0x24FF,
    0x257F,
    0x2600,
    0x2820,
    0x2920,
    0x2A20,
    0x2B20,
    0x2C00,
    0x2D00,
    0x2E00,
    0x2F00,
    0x3101,
    0x3240,
    0x3300,
    0x3400,
    0x3540,
    0x3709,
    0x3820,
    0x3909,
    0x3A1F,
    0x3B00,
    0x3C06,
    0x3D00,
    0x4FB7,
    0x50C0,
    0x51C1,
    0x52C2,
    0x53C3,
    0x54C4,
    0x55C5,
    0x5966,
    0x5A03,
    0x5B01,
    0x5C01,
    0x5D01,
    0x5E01,
    0x5F01,
    0x7400,
    0x7500,
    0x768B,
    0x7780,
    0x7800,
    0x7940,
    0x7A0B,
    0x7BA0,
    0x7C1A,
    0x7D28,
    0x7E00,
    0x7F5D,
    0x8000,
    0x8180,
    0x8200,
    0x8300,
    0x8400,
    0x8500,
    0x8600,									// es
    0x8700,
    0x8802,
    0x89E8,
    0x8A05,
    0x8BD0,
    0x8C00,
    0x8D3A,
    0x8E20,
    0x8F00,
    0x9008,
    0x9298,
    0x9398,
    0x9450,
    0x9590,
    0x9690,
    0x9750,
    0x9800,
    0x9901,
    0x9A03,
    0x9B00,
    0x9C02,
    0x9D07,
    0x9E00,
    0x9F81,
    0xA0C0,
    0xA104,
    0xA20E,
    0xA300,
    0xA500,
    0xA600,
    0xA700,
    0xA800,
    0xA900,
    0xAA00,
    0xAB00,
    0xAC00,
    0xAD00,
    0xAE00,
    0xAF00,
    0xB000,
    0xB100,
    0xB200,
    0xB300,
    0xB400,
    0xB500,
    0xB600,
    0xB700,
    0xB800,
    0xB900,
    0xBA00,
    0xBB00,
    0xBC00,
    0xBD00,
    0xBE00,
    0xBF00,
    0xC000,
    0xC100,
    0xC200,
    0xC300,
    0xC400,
    0xC500,
    0xC600,
    0xC700,
    0xC800,
    0xC900,
    0xCA00,
    0xCB00,
    0xCC00,
    0xCD00,
    0xCE00,
    0xCF00,
    0xD000,
    0xD100,
    0xD200,
    0xD300,
    0xD400,
    0xD500,
    0xD600,
    0xD700,
    0xD800,
    0xD900,
    0xDA00,
    0xDB00,
    0xDC00,
    0xDD00,
    0xDE00,
    0xDF00,
    0xE000,
    0xE100,
    0xE200,
    0xE300,
    0xE400,
    0xE500,
    0xE600,
    0xE700,
    0xE800,
    0xE900,
    0xEB00,
    0xEC00,
    0xED00,
    0xEE00,
    0xEF00,
    0xF000,
    0xF100,
    0xF200,
    0x0302,
    0x04F7,
    0x05DC,
    0x0600,
    0x07E2,
    0x0800,
    0x0900,
    0x0A15,
    0x0B90,
    0x0C00,
    0x0D51,
    0x0E51,
    0x0F51,
    0x1051,
    0x1151,
    0x1251,
    0x1351,
    0x1451,
    0x1551,
    0x1651,
    0x1751,
    0x1851,
    0x1951,
    0x1A51,
    0x1B51,
    0x1C51,
    0x1D00,
    0x1E02,
    0x1F02,
    0x2000,
    0x2100,
    0x2200,
    0x2300,
    0x2400,
    0x2500,
    0x2600,
    0x2700,
    0x2800,
    0x2900,
    0x2B14,
    0x2C00,
    0x2D40,
    0x2E30,
    0x3080,
    0x3180,
    0x3337,
    0x3490,
    0x3587,
    0x368E,
    0x373B,
    0x388C,
    0x3982,
    0x3A98,
    0x3B3B,
    0x3D00,
    0x3E03,
    0x3F0C,
    0x4019,
    0x4126,
    0x423F,
    0x4352,
    0x446E,
    0x4582,
    0x46A1,
    0x47B9,
    0x48CE,
    0x49E0,
    0x4AF0,
    0x4BFF,
    0x4C00,
    0x4D0B,
    0x4E17,
    0x4F22,
    0x502E,
    0x5140,
    0x5250,
    0x536E,
    0x5488,
    0x55AE,
    0x56CA,
    0x57DC,
    0x58EC,
    0x59F6,
    0x5AFF,
    0x5B00,
    0x5C03,
    0x5D0C,
    0x5E19,
    0x5F26,
    0x603F,
    0x6152,
    0x626E,
    0x6382,
    0x64A1,
    0x65B9,
    0x66CE,
    0x67E0,
    0x68F0,
    0x69FF,
    0x6A00,
    0x6B0C,
    0x6C19,
    0x6D27,
    0x6E34,
    0x6F4B,
    0x705C,
    0x7174,
    0x7286,
    0x73A4,
    0x74BA,
    0x75CE,
    0x76E0,
    0x77F1,
    0x78FF,
    0x7A8C,
    0x7B20,
    0x7C20,
    0x7D00,
    0x7E0A,
    0x7F80,
    0x8025,
    0x8100,
    0x8200,
    0x8325,
    0x8680,
    0x8780,
    0x887F,
    0x8A00,
    0x8B00,
    0x8D00,
    0x8EFE,
    0x8F00,
    0x9140,
    0x9240,
    0x9340,
    0x9440,
    0x9500,
    0x9600,
    0x9700,
    0x9800,
    0x9A80,
    0x9B20,
    0x9C80,
    0x9D00,
    0xA000,
    0xA101,
    0xA202,
    0xA380,
    0xA400,
    0xA501,
    0xA600,
    0xA7F0,
    0xA800,
    0xA980,
    0xAA80,
    0xAC00,
    0xAD00,
    0xAE00,
    0xAF0C,
    0xB004,
    0xB14B,
    0xB300,
    0xB400,
    0xB507,
    0xB67F,
    0xB700,
    0xB800,
    0xB904,
    0xBA37,
    0xBB02,
    0xBC80,
    0xBD04,
    0xBEFF,
    0xBF01,
    0xC068,
    0xC102,
    0xC2CF,
    0xC303,
    0xC4C0,
    0xC502,
    0xC61C,
    0xC700,
    0xC800,
    0xC907,
    0xCA7F,
    0xCB00,
    0xCC00,
    0xCD04,
    0xCE37,
    0xD000,
    0xD100,
    0xD200,
    0xD300,
    0xD400,
    0xD503,
    0xD6C0,
    0xD801,
    0xD941,
    0xDA02,
    0xDB80,
    0xDC00,
    0xDDA1,
    0xDE01,
    0xDF40,
    0xE008,														// es
    0xE100,
    0xE340,
    0xE440,
    0xE540,
    0xE640,
    0xE740,
    0xE840,
    0xE940,
    0xEA40,
    0xEB08,
    0xEC00,
    0xED80,
    0xEE80,
    0xEF04,
    0xF004,
    0xF104,
    0xF200,
    0xF33C,
    0xF402,
    0xF53A,
    0xF600,
    0xF700,
    0xF800,
    0xF900,
    0xFA00,
    0xFB00,
    0xFC00,
    0xFD00,
    0x0303,
    0x0437,
    0x0500,
    0x0600,
    0x0732,
    0x0825,
    0x0900,
    0x0A00,
    0x0B25,
    0x0C25,
    0x0D00,
    0x0E00,
    0x0F25,
    0x1003,
    0x1100,
    0x1203,
    0x1300,
    0x1404,
    0x1500,
    0x163A,
    0x1750,
    0x185A,
    0x1920,
    0x1B00,
    0x1C5D,
    0x1D00,
    0x1E40,
    0x1F00,
    0x205E,
    0x2200,
    0x2300,
    0x2400,
    0x2500,
    0x2600,
    0x2710,
    0x2820,
    0x2900,
    0x2A00,
    0x2B0C,
    0x2C1C,
    0x2D00,
    0x2E5F,
    0x2F3F,
    0x303F,
    0x317F,
    0x3240,
    0x3340,
    0x3440,
    0x3501,
    0x3600,
    0x3708,
    0x3818,
    0x3900,
    0x3A10,
    0x3B10,
    0x3C10,
    0x3D10,
    0x3E04,
    0x3F08,
    0x4018,
    0x4104,
    0x43FF,
    0x44FF,
    0x45FF,
    0x46FF,
    0x4750,
    0x4850,
    0x4950,
    0x4A50,
    0x4E00,
    0x4F10,
    0x5020,
    0x5100,
    0x5200,
    0x5310,
    0x5420,
    0x5500,
    0x5600,
    0x5704,
    0x5808,
    0x5900,
    0x5B80,
    0x5D00,
    0x5E00,
    0x5F00,
    0x6051,
    0x6151,
    0x6504,
    0x6604,
    0x6704,
    0x6804,
    0x6904,
    0x6A04,
    0x6B04,
    0x6C04,
    0x6D7F,
    0x6E7F,
    0x6F7F,
    0x707F,
    0x717F,
    0x727F,
    0x737F,
    0x747F,
    0x7700,
    0x7804,
    0x7908,
    0x7A00,
    0x7B10,
    0x7C16,
    0x7D20,
    0x7E10,
    0x7FFF,
    0x8200,
    0x9780,
    0x9880,
    0x9980,
    0x9A80,
    0x9B40,
    0x9C40,
    0x9D40,
    0x9E40,
    0xA000,
    0xA17F,
    0xA27F,
    0xA37F,
    0xA47F,
    0xA500,
    0xA600,
    0xA700,
    0xA800,
    0xAC00,
    0xAD00,
    0xB540,
    0xB640,
    0xB740,
    0xB840,
    0xB940,
    0xBA40,
    0xBB40,
    0xBD00,
    0xBE00,
    0xBF00,
    0xC000,
    0xCE00,
    0xCF08,
    0xD008,
    0xD108,
    0xD20F,
    0xD310,
    0xD428,
    0xD597,
    0xD60A,
    0xD7A0,
    0xDC00,
    0xDD04,
    0xDE0C,
    0xDF19,
    0xE023,
    0xE132,
    0xE241,
    0xE355,
    0xE469,
    0xE587,
    0xE69B,
    0xE7B1,
    0xE8C9,
    0xE9E3,
    0xEAFF,
    0xEC00,
    0xED00,
    0xEE00,
    0xEF00,
    0xF120,
    0xF220,
    0xF320,
    0xF420,
    0xF518,
    0xF618,
    0xF718,
    0xF818,
    0xF900,
    0xFA00,
    0xFB00,
    0xFC00,
    0xFD40,
    0x0304,
    0x0498,
    0x0565,
    0x06A0,
    0x0700,
    0x0E80,
    0x0FA0,
    0x10FF,
    0x11EE,
    0x1202,
    0x1307,
    0x1402,
    0x1507,
    0x1602,
    0x1707,
    0x1800,
    0x1900,
    0x1A28,
    0x1B02,
    0x1C47,
    0x1DE0,
    0x1E04,
    0x1F8F,
    0x20C0,
    0x2140,
    0x2200,
    0x2380,
    0x2400,
    0x2501,
    0x2600,
    0x2700,
    0x2801,
    0x2940,
    0x2A00,
    0x2C66,
    0x2E05,
    0x2F00,
    0x3008,
    0x3108,
    0x3208,															// es
    0x3308,
    0x3408,
    0x3510,
    0x3640,
    0x3780,
    0x38FF,
    0x3900,
    0x3A80,
    0x4108,
    0x4210,
    0x431A,
    0x4425,
    0x4504,
    0x4670,
    0x4780,
    0x4804,
    0x4904,
    0x4A05,
    0x4B00,
    0x4CFF,
    0x4DFF,
    0x4F03,
    0x5000,
    0x5110,
    0x52F0,
    0x5302,
    0x5402,
    0x5540,
    0x5600,
    0x57C0,
    0x5804,
    0x596E,
    0x5A45,
    0x5B27,
    0x5C4F,
    0x5D64,
    0x5EC4,
    0x5F3C,
    0x601E,
    0x614F,
    0x6278,
    0x6343,
    0x64A3,
    0x6528,
    0x663C,
    0x6880,
    0x6980,
    0x6A80,
    0x6B80,
    0x6C80,
    0x6D80,
    0x6E30,
    0x6F50,
    0x705E,
    0x7180,
    0x7280,
    0x7306,
    0x7404,
    0x7500,
    0x7600,
    0x77FF,
    0x78FF,
    0x7900,
    0x7A00,
    0x7BFF,
    0x7CFF,
    0x7D00,
    0x7E80,
    0x7F01,
    0x8000,
    0x82F0,
    0x8300,
    0x8400,
    0x8500,
    0x8600,
    0x8700,
    0x8800,
    0x8900,
    0x8A00,
    0x8B00,
    0x8C00,
    0x8D00,
    0x8E06,
    0x8F00,
    0x9010,
    0x9100,
    0x9220,
    0x9300,
    0x9402,
    0x9500,
    0x9608,
    0x9700,
    0x9820,
    0x9950,
    0x9A28,
    0x9B00,
    0x9C01,
    0x9F90,
    0xA080,
    0xA103,
    0xA203,
    0xA300,
    0xA400,
    0xA50C,
    0xA62A,
    0xA700,
    0xA830,
    0xA9A8,
    0xAB00,
    0xAC00,
    0xAD06,
    0xAE0A,
    0xAF0D,
    0xB010,
    0xB25D,
    0xB300,
    0xB45E,
    0xB500,
    0xB62C,
    0xB740,
    0xB82B,
    0xBA90,
    0xBB80,
    0xBC00,
    0xC000,
    0xC100,
    0xC200,
    0xC300,
    0xC400,
    0x0302,
    0x8A01,
    0x0302,
    0x5B00,
    0x5C0C,
    0x5D20,
    0x5E2F,
    0x5F3A,
    0x604B,
    0x6158,
    0x626D,
    0x637F,
    0x649C,
    0x65B4,
    0x66CA,
    0x67DD,
    0x68EF,
    0x69FF,
    0x0301,
    0x9278,
    0x9378,
    0x9450,
    0x9578,
    0x9678,
    0x9750,
    0x0304,
    0x8D00,
    0x8E0A,
    0x8F00,
    0x9010,
    0x9100,
    0x9218,
    0x0304,
    0x0564,
    0x0304,
    0x1204,
    0x135F,
    0x1404,
    0x155F,
    0x1604,
    0x175F,
    0x1800,
    0x1900,
    0x1A20,
    0x1B00,
    0x1C68,
    0x1DE8,
    0x1E00,
    0x1F68,
    0x20E8,
    0x0304,
    0x0E81,
    0x0FB0,
    0x10B0,
    0x0302,
    0x3337,
    0x3490,
    0x3587,
    0x368E,
    0x373B,
    0x388C,
    0x3987,
    0x3A98,
    0x3B3F,
    0x0303,
    0x0425,
    0x0500,
    0x0600,
    0x0725,
    0x0825,
    0x0900,
    0x0A00,
    0x0B25,
    0x0C25,
    0x0D00,
    0x0E00,
    0x0F25,
    0x1920,
    0x0304,
    0x6880,
    0x6980,
    0x6A80,
    0x6B7D,
    0x6C80,
    0x6D7D,
    0x0302,
    0x0A95,
    0x0302,
    0x04F7,
    0x05DE,
    0x0902,
    0x0B12,
    0x0302,
    0x30E0,
    0x31E0,
    0x0303,
    0xFDFF,
    0x0302,
    0x0B90,
    0x0302,
    0x2B1F,
    0x0302,
    0x95F0,
    0x96F0,
    0x97F7,
    0x0303,
    0x2600,
    0x276E,
    0x287A,
    0x2A00,
    0x2B0C,
    0x2C1C,
    0x6D22,
    0x6E22,
    0x6F22,
    0x7022,														// es
    0x7129,
    0x7229,
    0x7329,
    0x7429,
    0x9B3A,
    0x9C3A,
    0x9D3A,
    0x9E3A,
    0xA118,
    0xA218,
    0xA318,
    0xA418,
    0x0304,
    0xC060,
    0xC160,
    0xC280,
    0xF128,
    0xF228,
    0xF328,
    0xF428,
    0xF518,
    0xF618,
    0xF718,
    0xF818,
    0xF918,
    0xFA18,
    0xFB18,
    0xFC18,
    0x0303,
    0xB560,
    0xB62D,
    0xB719,
    0xB80C,
    0xB90D,
    0xBA0A,
    0xBB09,
    0x0300,
#if 1	
    0x0608,		// 30 fps
    0x0797,
#else
    0x060A,		// 25 fps
    0x074F,
#endif
    0x0804,
    0x0964,
    0x0a04,
    0x0b64,
    0x0300,
    0x23F0,
    0x2D01,
    0x2999,
    0x4030,
    0x2500,
    0x2681,
    0x0302,
    0x05DF,
    0x0300,
    0x0c00,
    0x0d05,
    0x0e00,
    0x0f05,
    0x1007,
    0x1184,
    0x1204,
    0x133C,
    0x1400,
    0x151A,
    0x1604,
    0x1751,
    0xD407,
    0xD580,
    0xD604,
    0xD738,
    0x0301,
    0x0800,
    0x0901,
    0x0A00,
    0x0B01,
    0x0303,
    0x1B00,
    0x1C5D,
    0x1D00,
    0x1E40,
    0x1F00,
    0x205E,
    0x0304,
    0xB25D,
    0xB300,
    0xB45E,
    0xB500,
    0xB62C,
    0xB740,
    0xB82B,
    0x2700,
    0x2801,
    0x2940,
    0x2A00,
    0x0301,
    0x3101,
    0x3240,
    0x3300,
    0x0300,
    0x0400,
    0x0300,
    0xE300,
    0x0300,													// es
    0xD3C2,
    0x0300,
    0x2350,
    0x402C,
    0x0301,
    0x59EE,
    0x0302,
    0x0800,
    0x0302,
    0xB300,
    0xB400,
    0xB507,
    0xB67F,
    0xB700,
    0xB800,
    0xB904,
    0xBA37,
    0xBB02,
    0xBC80,
    0xBD04,
    0xBEFF,
    0xBF01,
    0xC068,
    0xC102,
    0xC2CF,
    0xC303,
    0xC4C0,
    0xC502,
    0xC61C,
    0xC700,
    0xC800,
    0xC907,
    0xCA7F,
    0xCB00,
    0xCC00,
    0xCD04,
    0xCE37,
    0x0305,
    0xE4EE,
    0xE301,
    0x6504,
    0x0301,
    0xA501,
    0xA631,
    0xA701,
    0xA8C0,
    0xA901,
    0xAA32,
    0xAB01,
    0xACC1,
    0xAD01,
    0xAE33,
    0xAF01,
    0xB0C2,
    0xB101,
    0xB234,
    0xB301,
    0xB4C3,
    0xB501,
    0xB635,
    0xB701,
    0xB8C4,
    0xB901,
    0xBA26,
    0xBB01,
    0xBCB6,
    0xBD01,
    0xBE2B,
    0xBF01,
    0xC0B7,
    0xE504,
    0xE635,
    0xE970,
    0xEB04,
    0xEC11,
    0xED01,
    0xEEDB,
    0xEF01,
    0xF001,
    0xF1DD,
    0xF201,
    0x0302,
    0x04F7,
    0x05DC,
	0x0302,	// // bank C
	0x05DF,	// // isp_func_1 (default(DC), bayer sequence	// need to set sync_control_1 to 0x20, 0xDC ==> 0x24
	0xFFFF,
};

static const unsigned short init_p1219m_lvds_config[] = {
	0xFFFF,
};

static const unsigned short init_p1219m_bayer_3dnr_on_config[] = {			// es
	0xFFFF,
};

static const unsigned short init_p1219m_bayer_3dnr_off_config[] = {
	0xFFFF,
};

static const unsigned short init_p1219m_lvds_3dnr_on_config[] = {
	0xFFFF,
};

static const unsigned short init_p1219m_lvds_3dnr_off_config[] = {
	0xFFFF,
};

static const struct isp_3dnr_attr init_p1219m_bayer_3dnr_attr = {
	.on = init_p1219m_bayer_3dnr_on_config,
	.off = init_p1219m_bayer_3dnr_off_config,
};

static const struct isp_3dnr_attr init_p1219m_lvds_3dnr_attr = {
	.on = init_p1219m_lvds_3dnr_on_config,
	.off = init_p1219m_lvds_3dnr_off_config,
};

/* PV2109M */
static const unsigned short init_p2109m_bayer_config[] = {					// es
	/*20151221*/
	0x0300,	// // bank A
	0x0606,	// // framewidth_h   
	0x0771,	// // framewidth_l  
	0x0802,	// // fd_fheight_a_h 
	0x09ED,	// // fd_fheight_a_l 
	0x0a02,	// // fd_fheight_b_h 
	0x0bED,	// // fd_fheight_b_l 
	0x0300,	// // bank A
	//0x2354, // i2c_control_1 54
	0x2500,	// // clkdiv1 , mclk_div 00b:1/1 ,pclk_div = 1/1                   
	//0x2502,	// // clkdiv1 , mclk_div 00b:1/1 ,pclk_div = 1/1                   
	0x2681,	// // clkdiv2 , p_pp_equal => 1b:pclk = ppclk, dclk enable                  
	0x0302,	// // bank C
	//0x05DF,	// // isp_func_1 (default(DC), bayer sequence	//
	0x05DD,	// // isp_func_1 (default(DC), bayer sequence	// need to set sync_control_1 to 0x20DC ==> 0x24
	0x0300,	// // bank A      
	0x0c00,	// // windowx1_h   , default(00), pi2008(00)
	0x0d05,	// // windowx1_l   , default(05)  pi2008(01)
	0x0e00,	// // windowy1_h   , default(00)  pi2008(00)
	0x0f05,	// // windowy1_l   , default(05)  pi2008(01)
	0x1005,	// // windowx2_h   , default(07)  pi2008(07)
	0x1104,	// // windowx2_l   , default(84)  pi2008(80)
	0x1202,	// // windowy2_h   , default(04)  pi2008(04)
	0x13d4,	// // windowy2_l   , default(3C)  pi2008(38)
	0x1400,	// // vsyncstartrow_f0_h  , default(00)  
	0x150B,	// // vsyncstartrow_f0_l  , default(1a)   , pi2008(0b)
	0x1602,	// // vsyncstoprow_f0_h   , default(04)   
	0x17E9,	// // vsyncstoprow_f0_l   , default(51)   , pi2008(43)
	0x0300, 
	0xD405,	// zoom_x_h
	0xD500,	//# # zoom_x_l       
	0xD602,	//# # zoom_y_h         
	0xD7D0,	//# # zoom_y_l 
	0x0300,	// // bank A
	0x0400,	// // chip_mode : 20b smpte296
	0x0300,	// // bank A
	0xE300,	// // initset_fcnt
	0x0300,	// // bank A
	//0xD381,	// // smp296_ctrl1 => smpte296mode : 1b : 60fps			// problem......
	0xD3C2,	// // smp296_ctrl1 => smpte296mode : 1b : 60fps
	//0x0300,	// // bank A
	//0x2350,	// // i2c_control_1
	0x0301,	// // bank B
#if 0
	0x5964,	// i2c_slave_addr		0x32 (0x64)

	0x0302,	//   // bank C
	0xB300,	//	// ae_fwx1_h 
	0xB401,	//	// ae_fwx1_l 
	0xB505,	//	// ae_fwx2_h 
	0xB600,	//	// ae_fwx2_l 
	0xB700,	//	// ae_fwy1_h 
	0xB801,	//	// ae_fwy1_l 
	0xB902,	//	// ae_fwy2_h 
	0xBAD0,	//	// ae_fwy2_l											// es 
	0xBB01,	//	// ae_cwx1_h 
	0xBCAB,	//	// ae_cwx1_l 
	0xBD03,	//	// ae_cwx2_h 
	0xBE56,	//	// ae_cwx2_l 
	0xBF00,	//	// ae_cwy1_h 
	0xC0F1,	//	// ae_cwy1_l 
	0xC101,	//	// ae_cwy2_h 
	0xC2F0,	//	// ae_cwy2_l 
	0xC302,	//	// ae_xaxis_h
	0xC481,	//	// ae_xaxis_l
	0xC501,	//	// ae_yaxis_h
	0xC669,	//	// ae_yaxis_l
	0xC700,	//	// awb_wx1_h 
	0xC801,	//	// awb_wx1_l 
	0xC905,	//	// awb_wx2_h 
	0xCA00,	//	// awb_wx2_l 
	0xCB00,	//	// awb_wy1_h 
	0xCC01,	//	// awb_wy1_l 
	0xCD02,	//	// awb_wy2_h 
	0xCED0,	//	// awb_wy2_l             	
#endif
#if 0
	0x0305,
	0xE464, // cis_chip_addr
	0xE301, // auto_cis_set_en
	0x6504, // sif_control0
	0x0301,
	0xA501, // core_set0_addr_h  inttime_h
	0xA631, // core_set0_addr_l
	0xA701, // cis_set0_addr_h
	0xA8C0, // cis_set0_addr_l
	0xA901, // core_set1_addr_h  inttime_m
	0xAA32, // core_set1_addr_l
	0xAB01, // cis_set1_addr_h
	0xACC1, // cis_set1_addr_l
	0xAD01, // core_set2_addr_h  inttime_l
	0xAE33, // core_set2_addr_l
	0xAF01, // cis_set2_addr_h
	0xB0C2, // cis_set2_addr_l
	0xB101, // core_set3_addr_h  globalgain
	0xB234, // core_set3_addr_l
	0xB301, // cis_set3_addr_h
	0xB4C3, // cis_set3_addr_l
	0xB501, // core_set4_addr_h  digitalgain
	0xB635, // core_set4_addr_l
	0xB701, // cis_set4_addr_h
	0xB8C4, // cis_set4_addr_l
	0xE502, // cis_set_startrow0_h
	0xE6C3, // cis_set_startrow0_l
	0xE950, // num_cis_set_reg
	0xEB02, // cis_read_startrow_h
	0xECA9, // cis_read_startrow_l
	0xED01, // cis_led_addr_h
	0xEEDB, // cis_led_addr_l
	0xEF01, // led_read_en
	0xF001, // cis_obp_addr_h
	0xF1DD, // cis_obp_addr_l
	0xF201, // obp_read_en
#endif
	0xFFFF, 
};   

static const unsigned short init_p2109m_lvds_config[] = {
	0xFFFF,
};

static const unsigned short init_p2109m_bayer_3dnr_on_config[] = {			// es
	0xFFFF,
};

static const unsigned short init_p2109m_bayer_3dnr_off_config[] = {
	0xFFFF,
};

static const unsigned short init_p2109m_lvds_3dnr_on_config[] = {
	0xFFFF,
};

static const unsigned short init_p2109m_lvds_3dnr_off_config[] = {
	0xFFFF,
};

static const struct isp_3dnr_attr init_p2109m_bayer_3dnr_attr = {
	.on = init_p2109m_bayer_3dnr_on_config,
	.off = init_p2109m_bayer_3dnr_off_config,
};

static const struct isp_3dnr_attr init_p2109m_lvds_3dnr_attr = {
	.on = init_p2109m_lvds_3dnr_on_config,
	.off = init_p2109m_lvds_3dnr_off_config,
};

#else		// 			below CS chip configuration

/* PS1210K */

static const unsigned short init_p1210k_bayer_config[] = {		// cs 
#if 0
	0x0c00,	// # windowx1_h   , default(00), pi2008(00)
	0x0d05,	// # windowx1_l   , default(05)  pi2008(01)
	0x0e00,	// # windowy1_h   , default(00)  pi2008(00)
	0x0f05,	// # windowy1_l   , default(05)  pi2008(01)
	0x1007,	// # windowx2_h   , default(07)  pi2008(07)
	0x1184,	// # windowx2_l   , default(84)  pi2008(80)
	0x1204,	// # windowy2_h   , default(04)  pi2008(04)
	0x133C,	// # windowy2_l   , default(3C)  pi2008(38)
	0x1400,	// # vsyncstartrow_f0_h  , default(00)  
	0x151A,	// # vsyncstartrow_f0_l  , default(1a)   , pi2008(0b)
	0x1604,	// # vsyncstoprow_f0_h   , default(04)   
	0x1751,	// # vsyncstoprow_f0_l   , default(51)   , pi2008(43)
	0x0301,
	0xC004, 	// # inttime_h  
	0xC14F,	// # inttime_m  
	0xC200,	// # inttime_l  
	0xC300,	// # globalgain 
	0xC440,	// # digitalgain
#endif
	0x0302, 
	0x05F8, 	// default FB -> F8
	0x0303, 
	0x1040, 	// orig  default 5D -> 0x40
	0x1440, 	// default 5E -> 0x40
	0x0302, 
	0x05f0, 	// edge turn off, 
	0x8B00, 	
	0x9B24, 	// !!!!! CS ISP should be pclk inverted !!!!!!
	0x0301, 
	0x59EE, 	// default 66 -> EE		// sensor addr 
	//Color correction
	0x0302,
	0x3332,
	0x3487,
	0x358B,
	0x368E,
	0x373D,
	0x388F,
	0x3992,
	0x3A85,
	0x3B37,
	//Color saturation weight
	0x0303,
	0x0D20,
	0x0302,
	0x0B86, // user_cs_mode [3]
	0x0303,
	0x8AF0,	// dc_y2
	//////////////////////////////////////////////////////////////// edge
	//Edge control
	0x0302,
	0x05F8,
	0x0900,
	0x0B82,
	//sharpness control
	0x0303,
	0x7040,
	0x7140,
	//Edge gamma curve
	0x0303,
	0x4850,
	0x4940,
	0x4A30,
	0x4B20,
	0x4C18,
	0x4D10,
	0x4E10,
	//edge_gain_lf
	0x0303,
	0x5318,
	0x5410,
	0x5508,
	//edge_gain_ghf
	0x0303,
	0x5710,
	0x5810,
	0x5910,
	//edge_gain_ehf
	0x0303,
	0x5B10,
	0x5C10,
	0x5D10,
	//Darkness X reference
	0x0304,
	0x9800,
	0x9904,
	0x9A00,
	0x9B10,
	0x9C00,
	0x9D40,
	//dark_y_weight
	0x0303,
	0x7A40,
	0x7B40,
	0x7C80,
	//ycon_slope2
	0x0303,
	0xE840,
	0xE940,
	0xEA40,
	//dark_edge_gm
	0x0303,
	0x4F00,
	0x5000,
	0x5100,
	//dark_ec_pth
	0x0303,
	0x6004,
	0x6104,
	0x6204,
	//dark_ec_mth
	0x0303,
	0x6404,
	0x6504,
	0x6604,
	//dark_dpc_p
	0x0303,
	0x1A00,
	0x1B04,
	0x1C7F,
	//dark_dpc_n
	0x0303,
	0x1E00,
	0x1F08,
	0x2018,
	//ybrightness
	0x0302,
	0x9500,
	0x9600,
	0x9700,
	//blf_darkness
	0x0303,
	0x3F38,
	0x4010,
	0x4100,
	//dark_ec_pmax
	0x0303,
	0x6840,
	0x6910,
	0x6A08,
	//dark_ec_mmax
	0x0303,
	0x6C40,
	0x6D20,
	0x6E08,
	//hf_dir_max
	0x0303,
	0x241C,
	0x251C,
	0x267F,
	//intp_dir_th
	0x0303,
	0x2808,
	0x2908,
	0x2A7F,
	//Edge gamma curve
	0x0303,
	0x4831,
	0x4924,
	0x4A21,
	0x4B20,
	0x4C18,
	0x4D10,
	0x4E10,
	//AE Histo Control
	0x0304,
	0x0E81,
	0x0FC0,
	0x10A0,
	//ycont_slope2
	0x0303,
	0xE838,
	0xE940,
	0xEA40,
	//gamma curve fitting
	0x0302,
	0x5B00,
	0x5C04,
	0x5D11,
	0x5E20,
	0x5F2D,
	0x6042,
	0x6152,
	0x626A,
	0x637D,
	0x649B,
	0x65B4,
	0x66C9,
	0x67DD,
	0x68EF,
	0x69FF,
	//Y target control
	0x0304,
	0x3B70,
	0x3C68,
	0x3D48,
	0x3E68,
	0x3F48,
	0x4048,
	0x4100,
	0x4200,
	0x4314,
	0x4400,
	0x4502,
	0x46E8,
	0x4798,
	0x4845,
	0x49E0,
	0x4A00,
	0x4B8B,
	0x4CC0,
	//Color saturation
	0x0302,
	0x801F,
	0x8103,
	0x8283,
	0x831F,
	//awb rg/bg ratio control
	0x0304,
	0x06A0,
	//awb rg/bg ratio fitting
	0x0304,
	0x7380,
	0x7480,
	0x7580,
	0x7680,
	0x7778,
	0x787C,
	//Darkness Mode Control
	0x0304,
	0x9400,
	//edge_gain_lf
	0x0303,
	0x5310,
	0x540B,
	0x5508,
	//edge_gain_ghf
	0x0303,
	0x5700,
	0x5800,
	0x5900,
	//////////////////////////////////////////////////////////////////////// sc
	0x0309,
	0x0403,
	0x6D04,
	0x4930,
	0x4A10,
	0x4B40,
	0xAD08,
	0xAE10,
	0xAF20,
	0xB010,
	0xB108,
	0xB204,
	0xB360,
	0xB460,
	0xB540,
	0xB740,
	0xB803,
	0xB902,
	0xBB04,
	0x8E00,
	0x8F04,
	0x9006,
	0x9106,
	0x9204,
	0x9303,
	0x9401,
	0x9500,
		
	0xFFFF , 
};

#define FIRST_TUNE_20160517_ADD_CSHIFT	1
#define SECOND_TUNE_20160518			1

/* 20160325 ps3210m LVDS based */
static const unsigned short init_p1210k_lvds_config[] = {		// cs
    0x0302, 
    0x05F8, 	// default FB -> F8
    0x0303, 
    0x1040, 	// orig  default 5D -> 0x40
    0x1440, 	// default 5E -> 0x40
    0x0301, 
    0x59EE, 	// default 66 -> EE		// sensor addr 	
    0x0302, 
	0x05f0, 	// edge turn off, 
    0x8B00, 	
    0x9B24, 	// !!!!! CS ISP should be pclk inverted !!!!!!
//	0x0302,
//	0x0C05,		// test pattern
//	0x0303, 
//	0x8Bff,
	//Color correction
	0x0302,
	0x3332,
	0x3487,
	0x358B,
	0x368E,
	0x373D,
	0x388F,
	0x3992,
	0x3A85,
	0x3B37,
	//Color saturation weight
	0x0303,
	0x0D20,
	0x0302,
	0x0B86, // user_cs_mode [3]
	0x0303,
	0x8AF0,	// dc_y2
	//////////////////////////////////////////////////////////////// edge
	//Edge control
	0x0302,
	0x05F8,
	0x0900,
	0x0B82,
	//sharpness control
	0x0303,
	0x7040,
	0x7140,
	//Edge gamma curve
	0x0303,
	0x4850,
	0x4940,
	0x4A30,
	0x4B20,
	0x4C18,
	0x4D10,
	0x4E10,
	//edge_gain_lf
	0x0303,
	0x5318,
	0x5410,
	0x5508,
	//edge_gain_ghf
	0x0303,
	0x5710,
	0x5810,
	0x5910,
	//edge_gain_ehf
	0x0303,
	0x5B10,
	0x5C10,
	0x5D10,
	//Darkness X reference
	0x0304,
	0x9800,
	0x9904,
	0x9A00,
	0x9B10,
	0x9C00,
	0x9D40,
	//dark_y_weight
	0x0303,
	0x7A40,
	0x7B40,
	0x7C80,
	//ycon_slope2
	0x0303,
	0xE840,
	0xE940,
	0xEA40,
	//dark_edge_gm
	0x0303,
	0x4F00,
	0x5000,
	0x5100,
	//dark_ec_pth
	0x0303,
	0x6004,
	0x6104,
	0x6204,
	//dark_ec_mth
	0x0303,
	0x6404,
	0x6504,
	0x6604,
	//dark_dpc_p
	0x0303,
	0x1A00,
	0x1B04,
	0x1C7F,
	//dark_dpc_n
	0x0303,
	0x1E00,
	0x1F08,
	0x2018,
	//ybrightness
	0x0302,
	0x9500,
	0x9600,
	0x9700,
	//blf_darkness
	0x0303,
	0x3F38,
	0x4010,
	0x4100,
	//dark_ec_pmax
	0x0303,
	0x6840,
	0x6910,
	0x6A08,
	//dark_ec_mmax
	0x0303,
	0x6C40,
	0x6D20,
	0x6E08,
	//hf_dir_max
	0x0303,
	0x241C,
	0x251C,
	0x267F,
	//intp_dir_th
	0x0303,
	0x2808,
	0x2908,
	0x2A7F,
	//Edge gamma curve
	0x0303,
	0x4831,
	0x4924,
	0x4A21,
	0x4B20,
	0x4C18,
	0x4D10,
	0x4E10,
	//AE Histo Control
	0x0304,
	0x0E81,
	0x0FC0,
	0x10A0,
	//ycont_slope2
	0x0303,
	0xE838,
	0xE940,
	0xEA40,
	//gamma curve fitting
	0x0302,
	0x5B00,
	0x5C04,
	0x5D11,
	0x5E20,
	0x5F2D,
	0x6042,
	0x6152,
	0x626A,
	0x637D,
	0x649B,
	0x65B4,
	0x66C9,
	0x67DD,
	0x68EF,
	0x69FF,
	//Y target control
	0x0304,
	0x3B70,
	0x3C68,
	0x3D48,
	0x3E68,
	0x3F48,
	0x4048,
	0x4100,
	0x4200,
	0x4314,
	0x4400,
	0x4502,
	0x46E8,
	0x4798,
	0x4845,
	0x49E0,
	0x4A00,
	0x4B8B,
	0x4CC0,
	//Color saturation
	0x0302,
	0x801F,
	0x8103,
	0x8283,
	0x831F,
	//awb rg/bg ratio control
	0x0304,
	0x06A0,
	//awb rg/bg ratio fitting
	0x0304,
	0x7380,
	0x7480,
	0x7580,
	0x7680,
	0x7778,
	0x787C,
	//Darkness Mode Control
	0x0304,
	0x9400,
	//edge_gain_lf
	0x0303,
	0x5310,
	0x540B,
	0x5508,
	//edge_gain_ghf
	0x0303,
	0x5700,
	0x5800,
	0x5900,
	//////////////////////////////////////////////////////////////////////// sc
	0x0309,
	0x0403,
	0x6D04,
	0x4930,
	0x4A10,
	0x4B40,
	0xAD08,
	0xAE10,
	0xAF20,
	0xB010,
	0xB108,
	0xB204,
	0xB360,
	0xB460,
	0xB540,
	0xB740,
	0xB803,
	0xB902,
	0xBB04,
	0x8E00,
	0x8F04,
	0x9006,
	0x9106,
	0x9204,
	0x9303,
	0x9401,
	0x9500,
   
#if defined(FIRST_TUNE_20160517_ADD_CSHIFT)
// #[PO2210N(Rev.0)]
    0x0302, 
    0x0D51, 
    0x0E51, 
    0x0F51, 
    0x1051, 
    0x1151, 
    0x1251, 
    0x1351, 
    0x1451, 
    0x1551, 
    0x1651, 
    0x1751, 
    0x1851, 
    0x1951, 
    0x1A51, 
    0x1B51, 
    0x1C51, 
    0x0D11, 
    0x0E11, 
    0x0F11, 
    0x1011, 
    0x1111, 
    0x1211, 
    0x1311, 
    0x1411, 
    0x1511, 
    0x1611, 
    0x1711, 
    0x1811, 
    0x1911, 
    0x1A11, 
    0x1B11, 
    0x1C11, 
// #enable lens/cs fitting
 
    0x0304, 
    0x0564, 
// #lens gain fitting
 
// #W0302
 
// #W1E48
 
// #W1F48
 
// #W0303
 
// #W0840
 
// #W0940
 
// ################################ edge
 
// #Edge control
 
    0x0302, 
    0x05F8, 
    0x0900, 
    0x0B82, 
// #sharpness control
 
    0x0303, 
    0x7040, 
    0x7140, 
// #Darkness X reference
 
    0x0304, 
    0x9800, 
    0x9904, 
    0x9A00, 
    0x9B10, 
    0x9C00, 
    0x9D40, 
// #dark_edge_gm
 
    0x0303, 
    0x4F00, 
    0x5000, 
    0x5100, 
// #dark_ec_pth
 
    0x0303, 
    0x6004, 
    0x6104, 
    0x6204, 
// #dark_ec_mth
 
    0x0303, 
    0x6404, 
    0x6504, 
    0x6604, 
// #dark_dpc_p
 
    0x0303, 
    0x1A00, 
    0x1B04, 
    0x1C7F, 
// #dark_dpc_n
 
    0x0303, 
    0x1E00, 
    0x1F08, 
    0x2018, 
// #ybrightness
 
    0x0302, 
    0x9500, 
    0x9600, 
    0x9700, 
// #blf_darkness
 
    0x0303, 
    0x3F38, 
    0x4010, 
    0x4100, 
// #dark_ec_pmax
 
    0x0303, 
    0x6840, 
    0x6910, 
    0x6A08, 
// #dark_ec_mmax
 
    0x0303, 
    0x6C40, 
    0x6D20, 
    0x6E08, 
// #hf_dir_max
 
    0x0303, 
    0x241C, 
    0x251C, 
    0x267F, 
// #intp_dir_th
 
    0x0303, 
    0x2808, 
    0x2908, 
    0x2A7F, 
// #################################### sc
 
    0x0309, 
    0x0403, 
    0x6D04, 
    0x4930, 
    0x4A10, 
    0x4B40, 
    0xAD08, 
    0xAE10, 
    0xAF20, 
    0xB010, 
    0xB108, 
    0xB204, 
    0xB360, 
    0xB460, 
    0xB540, 
    0xB740, 
    0xB803, 
    0xB902, 
    0xBB04, 
    0x8E00, 
    0x8F04, 
    0x9006, 
    0x9106, 
    0x9204, 
    0x9303, 
    0x9401, 
    0x9500, 
// ############################# 160426 #############################
 
// #awb rg/bg ratio axis
 
    0x0304, 
    0x7940, 
    0x7A5A, 
    0x7B60, 
    0x0303, 
    0x4327, 
// ############################# 160513 #############################
 
// #Enable fitting mode
 
    0x0304, 
    0x8DF1, 
// #Darkness Mode Control
 
    0x0304, 
    0x9600, 
// #Color correction
 
    0x0302, 
    0x3338, 
    0x3491, 
    0x3587, 
    0x368E, 
    0x3736, 
    0x388D, 
    0x3981, 
    0x3A99, 
    0x3B3A, 
// #dark_rgb_gm
 
    0x0303, 
    0x7600, 
    0x7716, 
    0x7820, 
// #ISP function control
 
    0x0302, 
    0x04F5, 
    0x05F8, 
    0x0800, 
// #Color saturation
 
    0x0302, 
    0x8025, 
    0x8104, 
    0x8284, 
    0x8324, 
// #Color saturation weight
 
    0x0303, 
    0x0D50, 
    0x0302, 
    0x8A01, 
// #ycont_slope2
 
    0x0303, 
    0xE83A, 
    0xE92E, 
    0xEA2E, 
// #dark_y_weight
 
    0x0303, 
    0x7A80, 
    0x7B80, 
    0x7C80, 
// #awb rg/bg ratio control
 
    0x0304, 
    0x06A0, 
// #awb rg/bg ratio fitting
 
    0x0304, 
    0x737A, 
    0x7478, 
    0x7574, 
    0x7673, 
    0x7774, 
    0x7873, 
// #Darkness Mode Control
 
    0x0304, 
    0x9500, 
// #dark_ccr
 
    0x0303, 
    0x7E1A, 
    0x7F2E, 
    0x803C, 
// #AE Histo Control
 
    0x0304, 
    0x0E57, 
    0x0FB0, 
    0x10A0, 
// #gamma curve fitting
 
    0x0302, 
    0x3D00, 
    0x3E30, 
    0x3F40, 
    0x404B, 
    0x4154, 
    0x4263, 
    0x436F, 
    0x4483, 
    0x4593, 
    0x46AD, 
    0x47C2, 
    0x48D4, 
    0x49E4, 
    0x4AF2, 
    0x4BFF, 
// #gamma curve fitting
 
    0x0302, 
    0x4C00, 
    0x4D02, 
    0x4E0A, 
    0x4F15, 
    0x5021, 
    0x5138, 
    0x524A, 
    0x5365, 
    0x5479, 
    0x5599, 
    0x56B3, 
    0x57C9, 
    0x58DD, 
    0x59EF, 
    0x5AFF, 
// #gamma curve fitting
 
    0x0302, 
    0x5B00, 
    0x5C12, 
    0x5D2D, 
    0x5E40, 
    0x5F4D, 
    0x605F, 
    0x616C, 
    0x6281, 
    0x6392, 
    0x64AC, 
    0x65C1, 
    0x66D3, 
    0x67E4, 
    0x68F2, 
    0x69FF, 
// #gamma curve fitting
 
    0x0302, 
    0x6A00, 
    0x6B20, 
    0x6C2D, 
    0x6D37, 
    0x6E40, 
    0x6F4E, 
    0x705A, 
    0x716F, 
    0x7280, 
    0x739C, 
    0x74B5, 
    0x75CA, 
    0x76DD, 
    0x77EF, 
    0x78FF, 
// #dark_dc
 
    0x0303, 
    0x8200, 
    0x8309, 
    0x8416, 
// #dark_dc_y1
 
    0x0303, 
    0x8669, 
    0x8777, 
    0x8886, 
// #ybrightness
 
    0x0302, 
    0x95F8, 
    0x96EC, 
    0x97EC, 
// #Edge control
 
    0x0302, 
    0x05F8, 
    0x0900, 
    0x0B82, 
// #Edge gamma curve
 
    0x0303, 
    0x481F, 
    0x4928, 
    0x4A39, 
    0x4B43, 
    0x4C40, 
    0x4D37, 
    0x4E1B, 
// #Y target control
 
    0x0304, 
    0x3B80, 
    0x3C78, 
    0x3D78, 
    0x3E78, 
    0x3F70, 
    0x4068, 
    0x4184, 
    0x4200, 
    0x4314, 
    0x4400, 
    0x4502, 
    0x46E8, 
    0x4798, 
    0x4845, 
    0x49E0, 
    0x4A00, 
    0x4B8B, 
    0x4CC0, 
   
#endif
#if defined(SECOND_TUNE_20160518)
// #[PO2210N(Rev.0)]
 
    0x0303, 
    0x8A80, 
// #Edge control
 
    0x0302, 
    0x05FB, 
    0x0980, 
    0x0B82, 
// #Edge gamma curve
 
    0x0303, 
    0x4828, 
    0x4919, 
    0x4A11, 
    0x4B0F, 
    0x4C0D, 
    0x4D0C, 
    0x4E09, 
// #Color saturation
 
    0x0302, 
    0x8028, 
    0x8104, 
    0x8285, 
    0x832B, 
// #Color saturation weight
 
    0x0303, 
    0x0D4D, 
// #ybrightness
 
    0x0302, 
    0x95F8, 
    0x96F6, 
    0x97F4, 
// #ycont_slope2
 
    0x0303, 
    0xE834, 
    0xE92E, 
    0xEA2E, 
// #dark_dc_y1
 
    0x0303, 
    0x8669, 
    0x87FF, 
    0x88FF, 
// #blf_darkness
 
    0x0303, 
    0x3F15, 
    0x400B, 
    0x4100, 
// #blf_w0
 
    0x0303, 
    0x3335, 
    0x3430, 
    0x350E, 
// #gamma curve fitting
 
    0x0302, 
    0x4C00, 
    0x4D07, 
    0x4E0D, 
    0x4F13, 
    0x5018, 
    0x5122, 
    0x522C, 
    0x533E, 
    0x544F, 
    0x556F, 
    0x568E, 
    0x57AC, 
    0x58C8, 
    0x59E4, 
    0x5AFF, 
// #gamma curve fitting
 
    0x0302, 
    0x6A00, 
    0x6B3C, 
    0x6C4C, 
    0x6D57, 
    0x6E61, 
    0x6F70, 
    0x707B, 
    0x718E, 
    0x729D, 
    0x73B5, 
    0x74C8, 
    0x75D9, 
    0x76E7, 
    0x77F4, 
    0x78FF, 
// #sharpness control
 
    0x0303, 
    0x7040, 
    0x7140, 
    0x0302, 
    0x0980, 
    0x0303, 
    0x4318, 
#endif    
	0x0302, 
    0x9B24, 	// !!!!! CS ISP should be pclk inverted !!!!!!
#if defined(PS1210K_LVDS_FLIP_MIRROR) && defined(PS1210K_LVDS_MIRROR)	 
    0x05F8,			// 00
#elif defined(PS1210K_LVDS_MIRROR)
	0x05FA,			// 10 
#elif defined(PS1210K_LVDS_FLIP)
	0x05F9,
#else	
	0x05FB,
#endif	
	0xFFFF, 
};

static const unsigned short init_p1210k_bayer_3dnr_on_config[] = {
	0xFFFF,
};

static const unsigned short init_p1210k_bayer_3dnr_off_config[] = {
	0xFFFF,
};

static const unsigned short init_p1210k_lvds_3dnr_on_config[] = {			// cs
	0xFFFF,
};

static const unsigned short init_p1210k_lvds_3dnr_off_config[] = {
	0xFFFF,
};

static const struct isp_3dnr_attr init_p1210k_bayer_3dnr_attr = {
	.on = init_p1210k_bayer_3dnr_on_config,
	.off = init_p1210k_bayer_3dnr_off_config,
};

static const struct isp_3dnr_attr init_p1210k_lvds_3dnr_attr = {
	.on = init_p1210k_lvds_3dnr_on_config,
	.off = init_p1210k_lvds_3dnr_off_config,
};

/* PS1210M */
static const unsigned short init_p1210m_bayer_config[] = {
	0xFFFF,
};

static const unsigned short init_p1210m_lvds_config[] = {
	0xFFFF,
};

static const unsigned short init_p1210m_bayer_3dnr_on_config[] = {
	0xFFFF,
};

static const unsigned short init_p1210m_bayer_3dnr_off_config[] = {
	0xFFFF,
};

static const unsigned short init_p1210m_lvds_3dnr_on_config[] = {
	0xFFFF,
};

static const unsigned short init_p1210m_lvds_3dnr_off_config[] = {
	0xFFFF,
};

static const struct isp_3dnr_attr init_p1210m_bayer_3dnr_attr = {
	.on = init_p1210m_bayer_3dnr_on_config,
	.off = init_p1210m_bayer_3dnr_off_config,
};

static const struct isp_3dnr_attr init_p1210m_lvds_3dnr_attr = {
	.on = init_p1210m_lvds_3dnr_on_config,
	.off = init_p1210m_lvds_3dnr_off_config,
};

/* PS3210M */

/* 20151222 pc1210K based */
static const unsigned short init_p3210m_bayer_config[] = {		// cs
    0x0302, 
    0x05F8, 	// default FB -> F8
    0x0303, 
    0x1040, 	// orig  default 5D -> 0x40
    0x1440, 	// default 5E -> 0x40
    0x0301, 
    0x59EE, 	// default 66 -> EE		// sensor addr 	
    0x0302, 
	0x05f0, 	// edge turn off, 
    0x8B00, 	
    0x9B24, 	// !!!!! CS ISP should be pclk inverted !!!!!!
//	0x0302,
//	0x0C05,		// test pattern
//	0x0303, 
//	0x8Bff,
	//Color correction
	0x0302,
	0x3332,
	0x3487,
	0x358B,
	0x368E,
	0x373D,
	0x388F,
	0x3992,
	0x3A85,
	0x3B37,
	//Color saturation weight
	0x0303,
	0x0D20,
	0x0302,
	0x0B86, // user_cs_mode [3]
	0x0303,
	0x8AF0,	// dc_y2
	//////////////////////////////////////////////////////////////// edge
	//Edge control
	0x0302,
	0x05F8,
	0x0900,
	0x0B82,
	//sharpness control
	0x0303,
	0x7040,
	0x7140,
	//Edge gamma curve
	0x0303,
	0x4850,
	0x4940,
	0x4A30,
	0x4B20,
	0x4C18,
	0x4D10,
	0x4E10,
	//edge_gain_lf
	0x0303,
	0x5318,
	0x5410,
	0x5508,
	//edge_gain_ghf
	0x0303,
	0x5710,
	0x5810,
	0x5910,
	//edge_gain_ehf
	0x0303,
	0x5B10,
	0x5C10,
	0x5D10,
	//Darkness X reference
	0x0304,
	0x9800,
	0x9904,
	0x9A00,
	0x9B10,
	0x9C00,
	0x9D40,
	//dark_y_weight
	0x0303,
	0x7A40,
	0x7B40,
	0x7C80,
	//ycon_slope2
	0x0303,
	0xE840,
	0xE940,
	0xEA40,
	//dark_edge_gm
	0x0303,
	0x4F00,
	0x5000,
	0x5100,
	//dark_ec_pth
	0x0303,
	0x6004,
	0x6104,
	0x6204,
	//dark_ec_mth
	0x0303,
	0x6404,
	0x6504,
	0x6604,
	//dark_dpc_p
	0x0303,
	0x1A00,
	0x1B04,
	0x1C7F,
	//dark_dpc_n
	0x0303,
	0x1E00,
	0x1F08,
	0x2018,
	//ybrightness
	0x0302,
	0x9500,
	0x9600,
	0x9700,
	//blf_darkness
	0x0303,
	0x3F38,
	0x4010,
	0x4100,
	//dark_ec_pmax
	0x0303,
	0x6840,
	0x6910,
	0x6A08,
	//dark_ec_mmax
	0x0303,
	0x6C40,
	0x6D20,
	0x6E08,
	//hf_dir_max
	0x0303,
	0x241C,
	0x251C,
	0x267F,
	//intp_dir_th
	0x0303,
	0x2808,
	0x2908,
	0x2A7F,
	//Edge gamma curve
	0x0303,
	0x4831,
	0x4924,
	0x4A21,
	0x4B20,
	0x4C18,
	0x4D10,
	0x4E10,
	//AE Histo Control
	0x0304,
	0x0E81,
	0x0FC0,
	0x10A0,
	//ycont_slope2
	0x0303,
	0xE838,
	0xE940,
	0xEA40,
	//gamma curve fitting
	0x0302,
	0x5B00,
	0x5C04,
	0x5D11,
	0x5E20,
	0x5F2D,
	0x6042,
	0x6152,
	0x626A,
	0x637D,
	0x649B,
	0x65B4,
	0x66C9,
	0x67DD,
	0x68EF,
	0x69FF,
	//Y target control
	0x0304,
	0x3B70,
	0x3C68,
	0x3D48,
	0x3E68,
	0x3F48,
	0x4048,
	0x4100,
	0x4200,
	0x4314,
	0x4400,
	0x4502,
	0x46E8,
	0x4798,
	0x4845,
	0x49E0,
	0x4A00,
	0x4B8B,
	0x4CC0,
	//Color saturation
	0x0302,
	0x801F,
	0x8103,
	0x8283,
	0x831F,
	//awb rg/bg ratio control
	0x0304,
	0x06A0,
	//awb rg/bg ratio fitting
	0x0304,
	0x7380,
	0x7480,
	0x7580,
	0x7680,
	0x7778,
	0x787C,
	//Darkness Mode Control
	0x0304,
	0x9400,
	//edge_gain_lf
	0x0303,
	0x5310,
	0x540B,
	0x5508,
	//edge_gain_ghf
	0x0303,
	0x5700,
	0x5800,
	0x5900,
	//////////////////////////////////////////////////////////////////////// sc
	0x0309,
	0x0403,
	0x6D04,
	0x4930,
	0x4A10,
	0x4B40,
	0xAD08,
	0xAE10,
	0xAF20,
	0xB010,
	0xB108,
	0xB204,
	0xB360,
	0xB460,
	0xB540,
	0xB740,
	0xB803,
	0xB902,
	0xBB04,
	0x8E00,
	0x8F04,
	0x9006,
	0x9106,
	0x9204,
	0x9303,
	0x9401,
	0x9500,

    0x0302, 
    0x9B24, 	// !!!!! CS ISP should be pclk inverted !!!!!!

    0xFFFF, 
};

/* 20160325 ps3210m LVDS based */
static const unsigned short init_p3210m_lvds_config[] = {		// cs
    0x0302, 
    0x05F8, 	// default FB -> F8
    0x0303, 
    0x1040, 	// orig  default 5D -> 0x40
    0x1440, 	// default 5E -> 0x40
    0x0301, 
    0x59EE, 	// default 66 -> EE		// sensor addr 	
    0x0302, 
	0x05f0, 	// edge turn off, 
    0x8B00, 	
    0x9B24, 	// !!!!! CS ISP should be pclk inverted !!!!!!
//	0x0302,
//	0x0C05,		// test pattern
//	0x0303, 
//	0x8Bff,
	//Color correction
	0x0302,
	0x3332,
	0x3487,
	0x358B,
	0x368E,
	0x373D,
	0x388F,
	0x3992,
	0x3A85,
	0x3B37,
	//Color saturation weight
	0x0303,
	0x0D20,
	0x0302,
	0x0B86, // user_cs_mode [3]
	0x0303,
	0x8AF0,	// dc_y2
	//////////////////////////////////////////////////////////////// edge
	//Edge control
	0x0302,
	0x05F8,
	0x0900,
	0x0B82,
	//sharpness control
	0x0303,
	0x7040,
	0x7140,
	//Edge gamma curve
	0x0303,
	0x4850,
	0x4940,
	0x4A30,
	0x4B20,
	0x4C18,
	0x4D10,
	0x4E10,
	//edge_gain_lf
	0x0303,
	0x5318,
	0x5410,
	0x5508,
	//edge_gain_ghf
	0x0303,
	0x5710,
	0x5810,
	0x5910,
	//edge_gain_ehf
	0x0303,
	0x5B10,
	0x5C10,
	0x5D10,
	//Darkness X reference
	0x0304,
	0x9800,
	0x9904,
	0x9A00,
	0x9B10,
	0x9C00,
	0x9D40,
	//dark_y_weight
	0x0303,
	0x7A40,
	0x7B40,
	0x7C80,
	//ycon_slope2
	0x0303,
	0xE840,
	0xE940,
	0xEA40,
	//dark_edge_gm
	0x0303,
	0x4F00,
	0x5000,
	0x5100,
	//dark_ec_pth
	0x0303,
	0x6004,
	0x6104,
	0x6204,
	//dark_ec_mth
	0x0303,
	0x6404,
	0x6504,
	0x6604,
	//dark_dpc_p
	0x0303,
	0x1A00,
	0x1B04,
	0x1C7F,
	//dark_dpc_n
	0x0303,
	0x1E00,
	0x1F08,
	0x2018,
	//ybrightness
	0x0302,
	0x9500,
	0x9600,
	0x9700,
	//blf_darkness
	0x0303,
	0x3F38,
	0x4010,
	0x4100,
	//dark_ec_pmax
	0x0303,
	0x6840,
	0x6910,
	0x6A08,
	//dark_ec_mmax
	0x0303,
	0x6C40,
	0x6D20,
	0x6E08,
	//hf_dir_max
	0x0303,
	0x241C,
	0x251C,
	0x267F,
	//intp_dir_th
	0x0303,
	0x2808,
	0x2908,
	0x2A7F,
	//Edge gamma curve
	0x0303,
	0x4831,
	0x4924,
	0x4A21,
	0x4B20,
	0x4C18,
	0x4D10,
	0x4E10,
	//AE Histo Control
	0x0304,
	0x0E81,
	0x0FC0,
	0x10A0,
	//ycont_slope2
	0x0303,
	0xE838,
	0xE940,
	0xEA40,
	//gamma curve fitting
	0x0302,
	0x5B00,
	0x5C04,
	0x5D11,
	0x5E20,
	0x5F2D,
	0x6042,
	0x6152,
	0x626A,
	0x637D,
	0x649B,
	0x65B4,
	0x66C9,
	0x67DD,
	0x68EF,
	0x69FF,
	//Y target control
	0x0304,
	0x3B70,
	0x3C68,
	0x3D48,
	0x3E68,
	0x3F48,
	0x4048,
	0x4100,
	0x4200,
	0x4314,
	0x4400,
	0x4502,
	0x46E8,
	0x4798,
	0x4845,
	0x49E0,
	0x4A00,
	0x4B8B,
	0x4CC0,
	//Color saturation
	0x0302,
	0x801F,
	0x8103,
	0x8283,
	0x831F,
	//awb rg/bg ratio control
	0x0304,
	0x06A0,
	//awb rg/bg ratio fitting
	0x0304,
	0x7380,
	0x7480,
	0x7580,
	0x7680,
	0x7778,
	0x787C,
	//Darkness Mode Control
	0x0304,
	0x9400,
	//edge_gain_lf
	0x0303,
	0x5310,
	0x540B,
	0x5508,
	//edge_gain_ghf
	0x0303,
	0x5700,
	0x5800,
	0x5900,
	//////////////////////////////////////////////////////////////////////// sc
	0x0309,
	0x0403,
	0x6D04,
	0x4930,
	0x4A10,
	0x4B40,
	0xAD08,
	0xAE10,
	0xAF20,
	0xB010,
	0xB108,
	0xB204,
	0xB360,
	0xB460,
	0xB540,
	0xB740,
	0xB803,
	0xB902,
	0xBB04,
	0x8E00,
	0x8F04,
	0x9006,
	0x9106,
	0x9204,
	0x9303,
	0x9401,
	0x9500,
    
	0x0302, 
    0x9B24, 	// !!!!! CS ISP should be pclk inverted !!!!!!
    
	0xFFFF, 
};

static const unsigned short init_p3210m_bayer_3dnr_on_config[] = {
	0xFFFF,
};

static const unsigned short init_p3210m_bayer_3dnr_off_config[] = {
	0xFFFF,
};

static const unsigned short init_p3210m_lvds_3dnr_on_config[] = {
	0xFFFF,
};

static const unsigned short init_p3210m_lvds_3dnr_off_config[] = {
	0xFFFF,
};

static const struct isp_3dnr_attr init_p3210m_bayer_3dnr_attr = {
	.on = init_p3210m_bayer_3dnr_on_config,
	.off = init_p3210m_bayer_3dnr_off_config,
};

static const struct isp_3dnr_attr init_p3210m_lvds_3dnr_attr = {
	.on = init_p3210m_lvds_3dnr_on_config,
	.off = init_p3210m_lvds_3dnr_off_config,
};
	
/* PS3210P */

#define FIRST_TUNE_20160426_ADD_CSHIFT	1

/* 20160325 ps3210p LVDS based */
static const unsigned short init_p3210p_bayer_config[] = {				// cs
	0x0302, 
#if defined(USE_INTERBOARD)
	0x05FA, 	// default FB -> F8
#else
	0x05F8, 	// default FB -> F8
#endif	
	0x0303, 
	0x1040, 	// orig  default 5D -> 0x40
	0x1440, 	// default 5E -> 0x40
	0x0301, 
	0x59EE, 	// default 66 -> EE		// sensor addr 	
	0x0302, 
	0x05f0, 	// edge turn off, 
	0x8B00, 	
	0x9B24, 	// !!!!! CS ISP should be pclk inverted !!!!!!
	
	//	0x0302,
	//	0x0C05,		// test pattern
	//	0x0303, 
	//	0x8Bff,

	//Color correction
	0x0302,
	0x3332,
	0x3487,
	0x358B,
	0x368E,
	0x373D,
	0x388F,
	0x3992,
	0x3A85,
	0x3B37,
	//Color saturation weight
	0x0303,
	0x0D20,
	0x0302,
	0x0B86, // user_cs_mode [3]
	0x0303,
	0x8AF0,	// dc_y2
	//////////////////////////////////////////////////////////////// edge
	//Edge control
	0x0302,
	0x05F8,
	0x0900,
	0x0B82,
	//sharpness control
	0x0303,
	0x7040,
	0x7140,
	//Edge gamma curve
	0x0303,
	0x4850,
	0x4940,
	0x4A30,
	0x4B20,
	0x4C18,
	0x4D10,
	0x4E10,
	//edge_gain_lf
	0x0303,
	0x5318,
	0x5410,
	0x5508,
	//edge_gain_ghf
	0x0303,
	0x5710,
	0x5810,
	0x5910,
	//edge_gain_ehf
	0x0303,
	0x5B10,
	0x5C10,
	0x5D10,
	//Darkness X reference
	0x0304,
	0x9800,
	0x9904,
	0x9A00,
	0x9B10,
	0x9C00,
	0x9D40,
	//dark_y_weight
	0x0303,
	0x7A40,
	0x7B40,
	0x7C80,
	//ycon_slope2
	0x0303,
	0xE840,
	0xE940,
	0xEA40,
	//dark_edge_gm
	0x0303,
	0x4F00,
	0x5000,
	0x5100,
	//dark_ec_pth
	0x0303,
	0x6004,
	0x6104,
	0x6204,
	//dark_ec_mth
	0x0303,
	0x6404,
	0x6504,
	0x6604,
	//dark_dpc_p
	0x0303,
	0x1A00,
	0x1B04,
	0x1C7F,
	//dark_dpc_n
	0x0303,
	0x1E00,
	0x1F08,
	0x2018,
	//ybrightness
	0x0302,
	0x9500,
	0x9600,
	0x9700,
	//blf_darkness
	0x0303,
	0x3F38,
	0x4010,
	0x4100,
	//dark_ec_pmax
	0x0303,
	0x6840,
	0x6910,
	0x6A08,
	//dark_ec_mmax
	0x0303,
	0x6C40,
	0x6D20,
	0x6E08,
	//hf_dir_max
	0x0303,
	0x241C,
	0x251C,
	0x267F,
	//intp_dir_th
	0x0303,
	0x2808,
	0x2908,
	0x2A7F,
	//Edge gamma curve
	0x0303,
	0x4831,
	0x4924,
	0x4A21,
	0x4B20,
	0x4C18,
	0x4D10,
	0x4E10,
	//AE Histo Control
	0x0304,
	0x0E81,
	0x0FC0,
	0x10A0,
	//ycont_slope2
	0x0303,
	0xE838,
	0xE940,
	0xEA40,
	//gamma curve fitting
	0x0302,
	0x5B00,
	0x5C04,
	0x5D11,
	0x5E20,
	0x5F2D,
	0x6042,
	0x6152,
	0x626A,
	0x637D,
	0x649B,
	0x65B4,
	0x66C9,
	0x67DD,
	0x68EF,
	0x69FF,
	//Y target control
	0x0304,
	0x3B70,
	0x3C68,
	0x3D48,
	0x3E68,
	0x3F48,
	0x4048,
	0x4100,
	0x4200,
	0x4314,
	0x4400,
	0x4502,
	0x46E8,
	0x4798,
	0x4845,
	0x49E0,
	0x4A00,
	0x4B8B,
	0x4CC0,
	//Color saturation
	0x0302,
	0x801F,
	0x8103,
	0x8283,
	0x831F,
	//awb rg/bg ratio control
	0x0304,
	0x06A0,
	//awb rg/bg ratio fitting
	0x0304,
	0x7380,
	0x7480,
	0x7580,
	0x7680,
	0x7778,
	0x787C,
	//Darkness Mode Control
	0x0304,
	0x9400,
	//edge_gain_lf
	0x0303,
	0x5310,
	0x540B,
	0x5508,
	//edge_gain_ghf
	0x0303,
	0x5700,
	0x5800,
	0x5900,
	//////////////////////////////////////////////////////////////////////// sc
	0x0309,
	0x0403,
	0x6D04,
	0x4930,
	0x4A10,
	0x4B40,
	0xAD08,
	0xAE10,
	0xAF20,
	0xB010,
	0xB108,
	0xB204,
	0xB360,
	0xB460,
	0xB540,
	0xB740,
	0xB803,
	0xB902,
	0xBB04,
	0x8E00,
	0x8F04,
	0x9006,
	0x9106,
	0x9204,
	0x9303,
	0x9401,
	0x9500,

	0x0302, 
	0x9B24, 	// !!!!! CS ISP should be pclk inverted !!!!!!

#ifdef FIRST_TUNE_20160426_ADD_CSHIFT	
	/* tunning value for 160426_add_Cshift */
	0x0302,
	0x0D51,	//lens_red_e	81	51
	0x0E51,	//lens_red_w	81	51
	0x0F51,	//lens_red_n	81	51
	0x1051,	//lens_red_s	81	51
	0x1151,	//lens_g1_e	81	51
	0x1251,	//lens_g1_w	81	51
	0x1351,	//lens_g1_n	81	51
	0x1451,	//lens_g1_s	81	51
	0x1551,	//lens_g2_e	81	51
	0x1651,	//lens_g2_w	81	51
	0x1751,	//lens_g2_n	81	51
	0x1851,	//lens_g2_s	81	51
	0x1951,	//lens_blu_e	81	51
	0x1A51,	//lens_blu_w	81	51
	0x1B51,	//lens_blu_n	81	51
	0x1C51,	//lens_blu_s	81	51

	0x0D11,	//lens_red_e	81	51
	0x0E11,	//lens_red_w	81	51
	0x0F11,	//lens_red_n	81	51
	0x1011,	//lens_red_s	81	51
	0x1111,	//lens_g1_e	81	51
	0x1211,	//lens_g1_w	81	51
	0x1311,	//lens_g1_n	81	51
	0x1411,	//lens_g1_s	81	51
	0x1511,	//lens_g2_e	81	51
	0x1611,	//lens_g2_w	81	51
	0x1711,	//lens_g2_n	81	51
	0x1811,	//lens_g2_s	81	51
	0x1911,	//lens_blu_e	81	51
	0x1A11,	//lens_blu_w	81	51
	0x1B11,	//lens_blu_n	81	51
	0x1C11,	//lens_blu_s	81	51

	//enable lens/cs fitting
	0x0304,
	0x0564,

	//lens gain fitting
	//0x0302,
	//0x1E48,
	//0x1F48,

	//0x0303,
	//0x0840,
	//0x0940,

	//////////////////////////////////////////////////////////////// edge
	//Edge control
	0x0302,
	0x05F8,
	0x0900,
	0x0B82,

	//sharpness control
	0x0303,
	0x7040,
	0x7140,

	//Darkness X reference
	0x0304,
	0x9800,
	0x9904,
	0x9A00,
	0x9B10,
	0x9C00,
	0x9D40,

	//dark_edge_gm
	0x0303,
	0x4F00,
	0x5000,
	0x5100,

	//dark_ec_pth
	0x0303,
	0x6004,
	0x6104,
	0x6204,

	//dark_ec_mth
	0x0303,
	0x6404,
	0x6504,
	0x6604,

	//dark_dpc_p
	0x0303,
	0x1A00,
	0x1B04,
	0x1C7F,

	//dark_dpc_n
	0x0303,
	0x1E00,
	0x1F08,
	0x2018,

	//ybrightness
	0x0302,
	0x9500,
	0x9600,
	0x9700,

	//blf_darkness
	0x0303,
	0x3F38,
	0x4010,
	0x4100,

	//dark_ec_pmax
	0x0303,
	0x6840,
	0x6910,
	0x6A08,

	//dark_ec_mmax
	0x0303,
	0x6C40,
	0x6D20,
	0x6E08,

	//hf_dir_max
	0x0303,
	0x241C,
	0x251C,
	0x267F,

	//intp_dir_th
	0x0303,
	0x2808,
	0x2908,
	0x2A7F,

	//////////////////////////////////////////////////////////////////////// sc
	0x0309,
	0x0403,
	0x6D04,
	0x4930,
	0x4A10,
	0x4B40,
	0xAD08,
	0xAE10,
	0xAF20,
	0xB010,
	0xB108,
	0xB204,
	0xB360,
	0xB460,
	0xB540,
	0xB740,
	0xB803,
	0xB902,
	0xBB04,
	0x8E00,
	0x8F04,
	0x9006,
	0x9106,
	0x9204,
	0x9303,
	0x9401,
	0x9500,

	////////////////////////////////////////////////////////// 160426 //////////////////////////////////////////////////////////
	//Color saturation
	0x0302,
	0x8026,
	0x8108,
	0x8288,
	0x8324,

	//Color saturation weight
	0x0303,
	0x0D26,

	//ycont_slope2
	0x0303,
	0xE838,
	0xE93C,
	0xEA40,

	//Edge gamma curve
	0x0303,
	0x4880,
	0x495E,
	0x4A3A,
	0x4B28,
	0x4C18,
	0x4D10,
	0x4E0D,

	//Y target control
	0x0304,
	0x3B88,
	0x3C70,
	0x3D60,
	0x3E70,
	0x3F68,
	0x4048,
	0x4184,
	0x4200,
	0x4314,
	0x4400,
	0x4502,
	0x46E8,
	0x4798,
	0x4845,
	0x49E0,
	0x4A00,
	0x4B8B,
	0x4CC0,

	//edge_gain_lf
	0x0303,
	0x5310,
	0x5410,
	0x5508,

	//edge_gain_ghf
	0x0303,
	0x5708,
	0x5808,
	0x5908,

	//edge_gain_ehf
	0x0303,
	0x5B18,
	0x5C10,
	0x5D10,

	//awb rg/bg ratio axis
	0x0304,
	0x7940,
	0x7A5A,
	0x7B60,

	//awb rg/bg ratio control
	0x0304,
	0x06A0,

	//awb rg/bg ratio fitting
	0x0304,
	0x737A,
	0x7478,
	0x7574,
	0x7673,
	0x7778,
	0x7878,

	//Color correction
	0x0302,
	0x333D,
	0x3487,
	0x358A,
	0x368E,
	0x3746,
	0x388F,
	0x3992,
	0x3A85,
	0x3B41,

	//AE Histo Control
	0x0304,
	0x0E83,
	0x0FA0,
	0x1090,

	//dark_y_weight
	0x0303,
	0x7A80,
	0x7B80,
	0x7C80,

	//gamma curve fitting
	0x0302,
	0x3D00,
	0x3E0F,
	0x3F26,
	0x4037,
	0x4143,
	0x4254,
	0x4362,
	0x4477,
	0x4588,
	0x46A4,
	0x47BB,
	0x48CF,
	0x49E0,
	0x4AF1,
	0x4BFF,

	//gamma curve fitting
	0x0302,
	0x4C00,
	0x4D20,
	0x4E2D,
	0x4F37,
	0x5040,
	0x514E,
	0x525A,
	0x536F,
	0x5480,
	0x559C,
	0x56B5,
	0x57CA,
	0x58DD,
	0x59EF,
	0x5AFF,

	//gamma curve fitting
	0x0302,
	0x5B00,
	0x5C20,
	0x5D2D,
	0x5E37,
	0x5F40,
	0x604E,
	0x615A,
	0x626F,
	0x6380,
	0x649C,
	0x65B5,
	0x66CA,
	0x67DD,
	0x68EF,
	0x69FF,

	//gamma curve fitting
	0x0302,
	0x6A00,
	0x6B30,
	0x6C40,
	0x6D4B,
	0x6E54,
	0x6F63,
	0x706F,
	0x7183,
	0x7293,
	0x73AD,
	0x74C2,
	0x75D4,
	0x76E4,
	0x77F2,
	0x78FF,

	0x0303,
	0x4327,	// peri edge

	//dark_ccr
	0x0303,
	0x7E00,
	0x7F2E,
	0x803C,

	//dark_dc
	0x0303,
	0x8203,
	0x8302,
	0x8401,

	//dark_dc_y1
	0x0303,
	0x8653,
	0x8746,
	0x8822,
#endif
    0xFFFF, 
};

static const unsigned short init_p3210p_lvds_config[] = {
	0xFFFF,
};

static const unsigned short init_p3210p_bayer_3dnr_on_config[] = {
	0xFFFF,
};

static const unsigned short init_p3210p_bayer_3dnr_off_config[] = {
	0xFFFF,
};

static const unsigned short init_p3210p_lvds_3dnr_on_config[] = {
	0xFFFF,
};

static const unsigned short init_p3210p_lvds_3dnr_off_config[] = {
	0xFFFF,
};

static const struct isp_3dnr_attr init_p3210p_bayer_3dnr_attr = {
	.on = init_p3210p_bayer_3dnr_on_config,
	.off = init_p3210p_bayer_3dnr_off_config,
};

static const struct isp_3dnr_attr init_p3210p_lvds_3dnr_attr = {
	.on = init_p3210p_lvds_3dnr_on_config,
	.off = init_p3210p_lvds_3dnr_off_config,
};

/* PV1219M */

static const unsigned short init_p1219m_bayer_config[] = {			// cs
	0xFFFF,
};

static const unsigned short init_p1219m_lvds_config[] = {
	0xFFFF,
};

static const unsigned short init_p1219m_bayer_3dnr_on_config[] = {
	0xFFFF,
};

static const unsigned short init_p1219m_bayer_3dnr_off_config[] = {
	0xFFFF,
};

static const unsigned short init_p1219m_lvds_3dnr_on_config[] = {
	0xFFFF,
};

static const unsigned short init_p1219m_lvds_3dnr_off_config[] = {
	0xFFFF,
};

static const struct isp_3dnr_attr init_p1219m_bayer_3dnr_attr = {
	.on = init_p1219m_bayer_3dnr_on_config,
	.off = init_p1219m_bayer_3dnr_off_config,
};

static const struct isp_3dnr_attr init_p1219m_lvds_3dnr_attr = {
	.on = init_p1219m_lvds_3dnr_on_config,
	.off = init_p1219m_lvds_3dnr_off_config,
};

/* PV2109M */

static const unsigned short init_p2109m_bayer_config[] = {			// cs
	0xFFFF, 
};
   
static const unsigned short init_p2109m_lvds_config[] = {
	0xFFFF, 
};  

static const unsigned short init_p2109m_bayer_3dnr_on_config[] = {
	0xFFFF,
};

static const unsigned short init_p2109m_bayer_3dnr_off_config[] = {
	0xFFFF,
};

static const unsigned short init_p2109m_lvds_3dnr_on_config[] = {
	0xFFFF,
};

static const unsigned short init_p2109m_lvds_3dnr_off_config[] = {
	0xFFFF,
};

static const struct isp_3dnr_attr init_p2109m_bayer_3dnr_attr = {
	.on = init_p2109m_bayer_3dnr_on_config,
	.off = init_p2109m_bayer_3dnr_off_config,
};

static const struct isp_3dnr_attr init_p2109m_lvds_3dnr_attr = {
	.on = init_p2109m_lvds_3dnr_on_config,
	.off = init_p2109m_lvds_3dnr_off_config,
};
 
#endif

static struct isp_ctrl_info init_isp_values[] = {
	/* PC3089N */
	[SNS_PC3089N] = {
		.chip_id = 0xffff,
		.name = "pc3089n",
		.chip_addr = 0xff,
		.intf_supported = 0,
		.intf_mode = {
			0, 0
		},
		.intf_3dnr = {
			0, 0
		},
	},
	/* PC7030K */
	[SNS_PC7030K] = {
		.chip_id = 0xffff,
		.name = "pc7030k",
		.chip_addr = 0xff,
		.intf_supported = 0,
		.intf_mode = {
			0, 0
		},
		.intf_3dnr = {
			0, 0
		},
	},
	/* PO3100K */
	[SNS_PO3100K] = {
		.chip_id = 0xffff,
		.name = "po3100k",
		.chip_addr = 0xff,
		.intf_supported = 0,
		.intf_mode = {
			0, 0
		},
		.intf_3dnr = {
			0, 0
		},
	},
	/* PS1210K */
	[SNS_PS1210K] = {
#if defined(SENSOR_ESTYPE)
		.chip_id = 0xbd01,
#else
		.chip_id = 0x2210,
#endif
		.name = "ps1210k",
		.chip_addr = 0x30,
#if defined(SENSOR_ESTYPE)
		.intf_supported = (ISP_SUPPORT_BAYER),
#else
		.intf_supported = (ISP_SUPPORT_BAYER | ISP_SUPPORT_LVDS),
#endif
		.intf_mode = {
			init_p1210k_bayer_config, init_p1210k_lvds_config,
		},
		.intf_3dnr = {
			&init_p1210k_bayer_3dnr_attr, &init_p1210k_lvds_3dnr_attr,
		},
	},
	/* PS1210M */
	[SNS_PS1210M] = {
#if defined(SENSOR_ESTYPE)
		.chip_id = 0xbd01,
#else
		.chip_id = 0x2210,
#endif
		.name = "ps1210m",
		.chip_addr = 0x30,
#if defined(SENSOR_ESTYPE)
		.intf_supported = (ISP_SUPPORT_BAYER),
#else
		.intf_supported = 0,
#endif
		.intf_mode = {
			init_p1210m_bayer_config, init_p1210m_lvds_config,
		},
		.intf_3dnr = {
			&init_p1210m_bayer_3dnr_attr, &init_p1210m_lvds_3dnr_attr,
		},
	},
	/* PS3210M */
	[SNS_PS3210M] = {
#if defined(SENSOR_ESTYPE)
		.chip_id = 0xbd01,
#else
		.chip_id = 0x2210,
#endif
		.name = "ps3210m",
		.chip_addr = 0x30,
#if defined(SENSOR_ESTYPE)
		.intf_supported = (ISP_SUPPORT_BAYER),
#else		
		.intf_supported = (ISP_SUPPORT_BAYER | ISP_SUPPORT_LVDS),
#endif		
		.intf_mode = {
			init_p3210m_bayer_config, init_p3210m_lvds_config,
		},
		.intf_3dnr = {
			&init_p3210m_bayer_3dnr_attr, &init_p3210m_lvds_3dnr_attr,
		},
	},
	/* PS3210P */
	[SNS_PS3210P] = {
#if defined(SENSOR_ESTYPE)
		.chip_id = 0xbd01,
#else
		.chip_id = 0x2210,
#endif
		.name = "ps3210p",
		.chip_addr = 0x30,
#if defined(SENSOR_ESTYPE)
		.intf_supported = 0,
#else		
		.intf_supported = (ISP_SUPPORT_BAYER),
#endif		
		.intf_mode = {
			init_p3210p_bayer_config, init_p3210p_lvds_config,
		},
		.intf_3dnr = {
			&init_p3210p_bayer_3dnr_attr, &init_p3210p_lvds_3dnr_attr,
		},
	},
	/* PV1219M */
	[SNS_PV1219M] = {
#if defined(SENSOR_ESTYPE)
		.chip_id = 0xbd01,
#else
		.chip_id = 0x2210,
#endif
		.name = "pv1219",
		.chip_addr = 0x30,
#if defined(SENSOR_ESTYPE)
		.intf_supported = (ISP_SUPPORT_BAYER),
#else
		.intf_supported = 0,
#endif
		.intf_mode = {
			init_p1219m_bayer_config, init_p1219m_lvds_config,
		},
		.intf_3dnr = {
			&init_p1219m_bayer_3dnr_attr, &init_p1219m_lvds_3dnr_attr,
		},
	},
	/* PV2109M */
	[SNS_PV2109M] = {
#if defined(SENSOR_ESTYPE)
		.chip_id = 0xbd01,
#else
		.chip_id = 0x2210,
#endif
		.name = "pv2109",
		.chip_addr = 0x30,
#if defined(SENSOR_ESTYPE)
		.intf_supported = (ISP_SUPPORT_BAYER),
#else
		.intf_supported = 0,
#endif
		.intf_mode = {
			init_p2109m_bayer_config, init_p2109m_lvds_config,
		},
		.intf_3dnr = {
			&init_p2109m_bayer_3dnr_attr, &init_p2109m_lvds_3dnr_attr,
		},
	},
};



#endif // ISP_PS1210K_H_
