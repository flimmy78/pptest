#ifndef ISP_PS3210P_H_
#define ISP_PS3210P_H_ 1

#include <bd_sns_ctrl.h>


#if defined(SENSOR_ESTYPE)

#error "PS3210P does not support es-type"

#else

#define FIRST_TUNE_20160426_ADD_CSHIFT	1

/* 20160325 ps3210p LVDS based */
static const unsigned short init_p3210p_bayer_config[] = {
	0x0302, 
#if defined(USE_INTERBOARD)
	0x05FA, 	// default FB -> F8
#else
	0x05F8, 	// default FB -> F8
#endif	
	0x0303, 
	0x1040, 	// orig  default 5D -> 0x40
	0x1440, 	// default 5E -> 0x40
	0x0301, 
	0x59EE, 	// default 66 -> EE		// sensor addr 	
	0x0302, 
	0x05f0, 	// edge turn off, 
	0x8B00, 	
	0x9B24, 	// !!!!! CS ISP should be pclk inverted !!!!!!
	
	//	0x0302,
	//	0x0C05,		// test pattern
	//	0x0303, 
	//	0x8Bff,

	//Color correction
	0x0302,
	0x3332,
	0x3487,
	0x358B,
	0x368E,
	0x373D,
	0x388F,
	0x3992,
	0x3A85,
	0x3B37,
	//Color saturation weight
	0x0303,
	0x0D20,
	0x0302,
	0x0B86, // user_cs_mode [3]
	0x0303,
	0x8AF0,	// dc_y2
	//////////////////////////////////////////////////////////////// edge
	//Edge control
	0x0302,
	0x05F8,
	0x0900,
	0x0B82,
	//sharpness control
	0x0303,
	0x7040,
	0x7140,
	//Edge gamma curve
	0x0303,
	0x4850,
	0x4940,
	0x4A30,
	0x4B20,
	0x4C18,
	0x4D10,
	0x4E10,
	//edge_gain_lf
	0x0303,
	0x5318,
	0x5410,
	0x5508,
	//edge_gain_ghf
	0x0303,
	0x5710,
	0x5810,
	0x5910,
	//edge_gain_ehf
	0x0303,
	0x5B10,
	0x5C10,
	0x5D10,
	//Darkness X reference
	0x0304,
	0x9800,
	0x9904,
	0x9A00,
	0x9B10,
	0x9C00,
	0x9D40,
	//dark_y_weight
	0x0303,
	0x7A40,
	0x7B40,
	0x7C80,
	//ycon_slope2
	0x0303,
	0xE840,
	0xE940,
	0xEA40,
	//dark_edge_gm
	0x0303,
	0x4F00,
	0x5000,
	0x5100,
	//dark_ec_pth
	0x0303,
	0x6004,
	0x6104,
	0x6204,
	//dark_ec_mth
	0x0303,
	0x6404,
	0x6504,
	0x6604,
	//dark_dpc_p
	0x0303,
	0x1A00,
	0x1B04,
	0x1C7F,
	//dark_dpc_n
	0x0303,
	0x1E00,
	0x1F08,
	0x2018,
	//ybrightness
	0x0302,
	0x9500,
	0x9600,
	0x9700,
	//blf_darkness
	0x0303,
	0x3F38,
	0x4010,
	0x4100,
	//dark_ec_pmax
	0x0303,
	0x6840,
	0x6910,
	0x6A08,
	//dark_ec_mmax
	0x0303,
	0x6C40,
	0x6D20,
	0x6E08,
	//hf_dir_max
	0x0303,
	0x241C,
	0x251C,
	0x267F,
	//intp_dir_th
	0x0303,
	0x2808,
	0x2908,
	0x2A7F,
	//Edge gamma curve
	0x0303,
	0x4831,
	0x4924,
	0x4A21,
	0x4B20,
	0x4C18,
	0x4D10,
	0x4E10,
	//AE Histo Control
	0x0304,
	0x0E81,
	0x0FC0,
	0x10A0,
	//ycont_slope2
	0x0303,
	0xE838,
	0xE940,
	0xEA40,
	//gamma curve fitting
	0x0302,
	0x5B00,
	0x5C04,
	0x5D11,
	0x5E20,
	0x5F2D,
	0x6042,
	0x6152,
	0x626A,
	0x637D,
	0x649B,
	0x65B4,
	0x66C9,
	0x67DD,
	0x68EF,
	0x69FF,
	//Y target control
	0x0304,
	0x3B70,
	0x3C68,
	0x3D48,
	0x3E68,
	0x3F48,
	0x4048,
	0x4100,
	0x4200,
	0x4314,
	0x4400,
	0x4502,
	0x46E8,
	0x4798,
	0x4845,
	0x49E0,
	0x4A00,
	0x4B8B,
	0x4CC0,
	//Color saturation
	0x0302,
	0x801F,
	0x8103,
	0x8283,
	0x831F,
	//awb rg/bg ratio control
	0x0304,
	0x06A0,
	//awb rg/bg ratio fitting
	0x0304,
	0x7380,
	0x7480,
	0x7580,
	0x7680,
	0x7778,
	0x787C,
	//Darkness Mode Control
	0x0304,
	0x9400,
	//edge_gain_lf
	0x0303,
	0x5310,
	0x540B,
	0x5508,
	//edge_gain_ghf
	0x0303,
	0x5700,
	0x5800,
	0x5900,
	//////////////////////////////////////////////////////////////////////// sc
	0x0309,
	0x0403,
	0x6D04,
	0x4930,
	0x4A10,
	0x4B40,
	0xAD08,
	0xAE10,
	0xAF20,
	0xB010,
	0xB108,
	0xB204,
	0xB360,
	0xB460,
	0xB540,
	0xB740,
	0xB803,
	0xB902,
	0xBB04,
	0x8E00,
	0x8F04,
	0x9006,
	0x9106,
	0x9204,
	0x9303,
	0x9401,
	0x9500,

	0x0302, 
	0x9B24, 	// !!!!! CS ISP should be pclk inverted !!!!!!

#ifdef FIRST_TUNE_20160426_ADD_CSHIFT	
	/* tunning value for 160426_add_Cshift */
	0x0302,
	0x0D51,	//lens_red_e	81	51
	0x0E51,	//lens_red_w	81	51
	0x0F51,	//lens_red_n	81	51
	0x1051,	//lens_red_s	81	51
	0x1151,	//lens_g1_e	81	51
	0x1251,	//lens_g1_w	81	51
	0x1351,	//lens_g1_n	81	51
	0x1451,	//lens_g1_s	81	51
	0x1551,	//lens_g2_e	81	51
	0x1651,	//lens_g2_w	81	51
	0x1751,	//lens_g2_n	81	51
	0x1851,	//lens_g2_s	81	51
	0x1951,	//lens_blu_e	81	51
	0x1A51,	//lens_blu_w	81	51
	0x1B51,	//lens_blu_n	81	51
	0x1C51,	//lens_blu_s	81	51

	0x0D11,	//lens_red_e	81	51
	0x0E11,	//lens_red_w	81	51
	0x0F11,	//lens_red_n	81	51
	0x1011,	//lens_red_s	81	51
	0x1111,	//lens_g1_e	81	51
	0x1211,	//lens_g1_w	81	51
	0x1311,	//lens_g1_n	81	51
	0x1411,	//lens_g1_s	81	51
	0x1511,	//lens_g2_e	81	51
	0x1611,	//lens_g2_w	81	51
	0x1711,	//lens_g2_n	81	51
	0x1811,	//lens_g2_s	81	51
	0x1911,	//lens_blu_e	81	51
	0x1A11,	//lens_blu_w	81	51
	0x1B11,	//lens_blu_n	81	51
	0x1C11,	//lens_blu_s	81	51

	//enable lens/cs fitting
	0x0304,
	0x0564,

	//lens gain fitting
	//0x0302,
	//0x1E48,
	//0x1F48,

	//0x0303,
	//0x0840,
	//0x0940,

	//////////////////////////////////////////////////////////////// edge
	//Edge control
	0x0302,
	0x05F8,
	0x0900,
	0x0B82,

	//sharpness control
	0x0303,
	0x7040,
	0x7140,

	//Darkness X reference
	0x0304,
	0x9800,
	0x9904,
	0x9A00,
	0x9B10,
	0x9C00,
	0x9D40,

	//dark_edge_gm
	0x0303,
	0x4F00,
	0x5000,
	0x5100,

	//dark_ec_pth
	0x0303,
	0x6004,
	0x6104,
	0x6204,

	//dark_ec_mth
	0x0303,
	0x6404,
	0x6504,
	0x6604,

	//dark_dpc_p
	0x0303,
	0x1A00,
	0x1B04,
	0x1C7F,

	//dark_dpc_n
	0x0303,
	0x1E00,
	0x1F08,
	0x2018,

	//ybrightness
	0x0302,
	0x9500,
	0x9600,
	0x9700,

	//blf_darkness
	0x0303,
	0x3F38,
	0x4010,
	0x4100,

	//dark_ec_pmax
	0x0303,
	0x6840,
	0x6910,
	0x6A08,

	//dark_ec_mmax
	0x0303,
	0x6C40,
	0x6D20,
	0x6E08,

	//hf_dir_max
	0x0303,
	0x241C,
	0x251C,
	0x267F,

	//intp_dir_th
	0x0303,
	0x2808,
	0x2908,
	0x2A7F,

	//////////////////////////////////////////////////////////////////////// sc
	0x0309,
	0x0403,
	0x6D04,
	0x4930,
	0x4A10,
	0x4B40,
	0xAD08,
	0xAE10,
	0xAF20,
	0xB010,
	0xB108,
	0xB204,
	0xB360,
	0xB460,
	0xB540,
	0xB740,
	0xB803,
	0xB902,
	0xBB04,
	0x8E00,
	0x8F04,
	0x9006,
	0x9106,
	0x9204,
	0x9303,
	0x9401,
	0x9500,

	////////////////////////////////////////////////////////// 160426 //////////////////////////////////////////////////////////
	//Color saturation
	0x0302,
	0x8026,
	0x8108,
	0x8288,
	0x8324,

	//Color saturation weight
	0x0303,
	0x0D26,

	//ycont_slope2
	0x0303,
	0xE838,
	0xE93C,
	0xEA40,

	//Edge gamma curve
	0x0303,
	0x4880,
	0x495E,
	0x4A3A,
	0x4B28,
	0x4C18,
	0x4D10,
	0x4E0D,

	//Y target control
	0x0304,
	0x3B88,
	0x3C70,
	0x3D60,
	0x3E70,
	0x3F68,
	0x4048,
	0x4184,
	0x4200,
	0x4314,
	0x4400,
	0x4502,
	0x46E8,
	0x4798,
	0x4845,
	0x49E0,
	0x4A00,
	0x4B8B,
	0x4CC0,

	//edge_gain_lf
	0x0303,
	0x5310,
	0x5410,
	0x5508,

	//edge_gain_ghf
	0x0303,
	0x5708,
	0x5808,
	0x5908,

	//edge_gain_ehf
	0x0303,
	0x5B18,
	0x5C10,
	0x5D10,

	//awb rg/bg ratio axis
	0x0304,
	0x7940,
	0x7A5A,
	0x7B60,

	//awb rg/bg ratio control
	0x0304,
	0x06A0,

	//awb rg/bg ratio fitting
	0x0304,
	0x737A,
	0x7478,
	0x7574,
	0x7673,
	0x7778,
	0x7878,

	//Color correction
	0x0302,
	0x333D,
	0x3487,
	0x358A,
	0x368E,
	0x3746,
	0x388F,
	0x3992,
	0x3A85,
	0x3B41,

	//AE Histo Control
	0x0304,
	0x0E83,
	0x0FA0,
	0x1090,

	//dark_y_weight
	0x0303,
	0x7A80,
	0x7B80,
	0x7C80,

	//gamma curve fitting
	0x0302,
	0x3D00,
	0x3E0F,
	0x3F26,
	0x4037,
	0x4143,
	0x4254,
	0x4362,
	0x4477,
	0x4588,
	0x46A4,
	0x47BB,
	0x48CF,
	0x49E0,
	0x4AF1,
	0x4BFF,

	//gamma curve fitting
	0x0302,
	0x4C00,
	0x4D20,
	0x4E2D,
	0x4F37,
	0x5040,
	0x514E,
	0x525A,
	0x536F,
	0x5480,
	0x559C,
	0x56B5,
	0x57CA,
	0x58DD,
	0x59EF,
	0x5AFF,

	//gamma curve fitting
	0x0302,
	0x5B00,
	0x5C20,
	0x5D2D,
	0x5E37,
	0x5F40,
	0x604E,
	0x615A,
	0x626F,
	0x6380,
	0x649C,
	0x65B5,
	0x66CA,
	0x67DD,
	0x68EF,
	0x69FF,

	//gamma curve fitting
	0x0302,
	0x6A00,
	0x6B30,
	0x6C40,
	0x6D4B,
	0x6E54,
	0x6F63,
	0x706F,
	0x7183,
	0x7293,
	0x73AD,
	0x74C2,
	0x75D4,
	0x76E4,
	0x77F2,
	0x78FF,

	0x0303,
	0x4327,	// peri edge

	//dark_ccr
	0x0303,
	0x7E00,
	0x7F2E,
	0x803C,

	//dark_dc
	0x0303,
	0x8203,
	0x8302,
	0x8401,

	//dark_dc_y1
	0x0303,
	0x8653,
	0x8746,
	0x8822,
#endif
    0xFFFF, 
};

#endif

static struct isp_ctrl_info init_p3210p_values = {
#if defined(SENSOR_ESTYPE)
	.chip_id = 0xbd01,
#else
	.chip_id = 0x2210,
#endif
	.name = "ps3210p",
	.chip_addr = 0x30,
	.intf_supported = (ISP_SUPPORT_BAYER),
	.intf_mode = {
		init_p3210p_bayer_config, 0,
	},
};


#endif // ISP_PS3210P_H_
